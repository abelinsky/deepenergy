# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Env_pb2 as Env__pb2


class EnvStub(object):
  """Main class for all environments of the platform (gas system, energy system, industry infrastructure system, etc).
  Encapsulates the environment with arbitrary behind-the-scenes dynamics, which is governed by concrete virtual simulator.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetDataLocation = channel.unary_unary(
        '/energy_platform.Env/SetDataLocation',
        request_serializer=Env__pb2.SetDataLocationRequest.SerializeToString,
        response_deserializer=Env__pb2.SetDataLocationResponse.FromString,
        )
    self.GetEnvDescription = channel.unary_unary(
        '/energy_platform.Env/GetEnvDescription',
        request_serializer=Env__pb2.GetEnvDescriptionRequest.SerializeToString,
        response_deserializer=Env__pb2.GetEnvDescriptionResponse.FromString,
        )
    self.SetCurrentTask = channel.unary_unary(
        '/energy_platform.Env/SetCurrentTask',
        request_serializer=Env__pb2.SetCurrentTaskRequest.SerializeToString,
        response_deserializer=Env__pb2.SetCurrentTaskResponse.FromString,
        )
    self.GetAllowedActions = channel.unary_unary(
        '/energy_platform.Env/GetAllowedActions',
        request_serializer=Env__pb2.AllowedActionsRequest.SerializeToString,
        response_deserializer=Env__pb2.AllowedActionsResponse.FromString,
        )
    self.Reset = channel.unary_unary(
        '/energy_platform.Env/Reset',
        request_serializer=Env__pb2.ResetRequest.SerializeToString,
        response_deserializer=Env__pb2.ResetResponse.FromString,
        )
    self.Step = channel.unary_unary(
        '/energy_platform.Env/Step',
        request_serializer=Env__pb2.StepRequest.SerializeToString,
        response_deserializer=Env__pb2.StepResponse.FromString,
        )
    self.Stop = channel.unary_unary(
        '/energy_platform.Env/Stop',
        request_serializer=Env__pb2.StopRequest.SerializeToString,
        response_deserializer=Env__pb2.StopResponse.FromString,
        )


class EnvServicer(object):
  """Main class for all environments of the platform (gas system, energy system, industry infrastructure system, etc).
  Encapsulates the environment with arbitrary behind-the-scenes dynamics, which is governed by concrete virtual simulator.
  """

  def SetDataLocation(self, request, context):
    """Sets data for calculations. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEnvDescription(self, request, context):
    """Loads data and returns environment description. Data location must be already set. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetCurrentTask(self, request, context):
    """Sets current task  
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllowedActions(self, request, context):
    """Returns the list of control parameters (possible agent's actions) 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset(self, request, context):
    """Resets the state of the environment (the simulator state) and returns an initial observation.

    Args:
    ResetParams: params needed to reset the simulator. 

    Returns:
    Observation: the initial observation. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Step(self, request, context):
    """Performs one timestep of the environment's dynamics. When end of the episode is reached, you have to call Reset().

    Args:
    StepParams: the action provided by the AI-agent

    Returns:
    StepResult: results from the simulation step.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Stop(self, request, context):
    """Stops simulations.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EnvServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetDataLocation': grpc.unary_unary_rpc_method_handler(
          servicer.SetDataLocation,
          request_deserializer=Env__pb2.SetDataLocationRequest.FromString,
          response_serializer=Env__pb2.SetDataLocationResponse.SerializeToString,
      ),
      'GetEnvDescription': grpc.unary_unary_rpc_method_handler(
          servicer.GetEnvDescription,
          request_deserializer=Env__pb2.GetEnvDescriptionRequest.FromString,
          response_serializer=Env__pb2.GetEnvDescriptionResponse.SerializeToString,
      ),
      'SetCurrentTask': grpc.unary_unary_rpc_method_handler(
          servicer.SetCurrentTask,
          request_deserializer=Env__pb2.SetCurrentTaskRequest.FromString,
          response_serializer=Env__pb2.SetCurrentTaskResponse.SerializeToString,
      ),
      'GetAllowedActions': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllowedActions,
          request_deserializer=Env__pb2.AllowedActionsRequest.FromString,
          response_serializer=Env__pb2.AllowedActionsResponse.SerializeToString,
      ),
      'Reset': grpc.unary_unary_rpc_method_handler(
          servicer.Reset,
          request_deserializer=Env__pb2.ResetRequest.FromString,
          response_serializer=Env__pb2.ResetResponse.SerializeToString,
      ),
      'Step': grpc.unary_unary_rpc_method_handler(
          servicer.Step,
          request_deserializer=Env__pb2.StepRequest.FromString,
          response_serializer=Env__pb2.StepResponse.SerializeToString,
      ),
      'Stop': grpc.unary_unary_rpc_method_handler(
          servicer.Stop,
          request_deserializer=Env__pb2.StopRequest.FromString,
          response_serializer=Env__pb2.StopResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'energy_platform.Env', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
