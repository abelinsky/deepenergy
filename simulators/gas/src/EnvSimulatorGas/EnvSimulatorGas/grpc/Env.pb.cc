// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Env.proto
#include "pch.h"
#include "Env.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Env_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Action_Env_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Env_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Edge_Env_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Env_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EdgeParams_Env_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Env_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Node_Env_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Env_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NodeParams_Env_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Env_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Observation_Env_2eproto;
namespace energy_platform {
class NodeParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NodeParams> _instance;
} _NodeParams_default_instance_;
class EdgeParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EdgeParams> _instance;
} _EdgeParams_default_instance_;
class NodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Node> _instance;
} _Node_default_instance_;
class EdgeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Edge> _instance;
} _Edge_default_instance_;
class ObservationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Observation> _instance;
} _Observation_default_instance_;
class ActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Action> _instance;
  float float_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 int_value_;
} _Action_default_instance_;
class AllowedActionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AllowedActionsRequest> _instance;
} _AllowedActionsRequest_default_instance_;
class AllowedActionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AllowedActionsResponse> _instance;
} _AllowedActionsResponse_default_instance_;
class ResetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetRequest> _instance;
} _ResetRequest_default_instance_;
class ResetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResetResponse> _instance;
} _ResetResponse_default_instance_;
class StepRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StepRequest> _instance;
} _StepRequest_default_instance_;
class StepResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StepResponse> _instance;
} _StepResponse_default_instance_;
class StopRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopRequest> _instance;
} _StopRequest_default_instance_;
class StopResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopResponse> _instance;
} _StopResponse_default_instance_;
class SetDataLocationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetDataLocationRequest> _instance;
} _SetDataLocationRequest_default_instance_;
class SetDataLocationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetDataLocationResponse> _instance;
} _SetDataLocationResponse_default_instance_;
class SetCurrentTaskRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetCurrentTaskRequest> _instance;
} _SetCurrentTaskRequest_default_instance_;
class SetCurrentTaskResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetCurrentTaskResponse> _instance;
} _SetCurrentTaskResponse_default_instance_;
class GetEnvDescriptionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEnvDescriptionRequest> _instance;
} _GetEnvDescriptionRequest_default_instance_;
class GetEnvDescriptionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEnvDescriptionResponse> _instance;
} _GetEnvDescriptionResponse_default_instance_;
}  // namespace energy_platform
static void InitDefaultsscc_info_Action_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_Action_default_instance_;
    new (ptr) ::energy_platform::Action();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::Action::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Action_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Action_Env_2eproto}, {}};

static void InitDefaultsscc_info_AllowedActionsRequest_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_AllowedActionsRequest_default_instance_;
    new (ptr) ::energy_platform::AllowedActionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::AllowedActionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AllowedActionsRequest_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AllowedActionsRequest_Env_2eproto}, {}};

static void InitDefaultsscc_info_AllowedActionsResponse_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_AllowedActionsResponse_default_instance_;
    new (ptr) ::energy_platform::AllowedActionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::AllowedActionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AllowedActionsResponse_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_AllowedActionsResponse_Env_2eproto}, {
      &scc_info_Action_Env_2eproto.base,}};

static void InitDefaultsscc_info_Edge_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_Edge_default_instance_;
    new (ptr) ::energy_platform::Edge();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::Edge::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Edge_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_Edge_Env_2eproto}, {
      &scc_info_EdgeParams_Env_2eproto.base,}};

static void InitDefaultsscc_info_EdgeParams_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_EdgeParams_default_instance_;
    new (ptr) ::energy_platform::EdgeParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::EdgeParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EdgeParams_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_EdgeParams_Env_2eproto}, {}};

static void InitDefaultsscc_info_GetEnvDescriptionRequest_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_GetEnvDescriptionRequest_default_instance_;
    new (ptr) ::energy_platform::GetEnvDescriptionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::GetEnvDescriptionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEnvDescriptionRequest_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetEnvDescriptionRequest_Env_2eproto}, {}};

static void InitDefaultsscc_info_GetEnvDescriptionResponse_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_GetEnvDescriptionResponse_default_instance_;
    new (ptr) ::energy_platform::GetEnvDescriptionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::GetEnvDescriptionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEnvDescriptionResponse_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetEnvDescriptionResponse_Env_2eproto}, {}};

static void InitDefaultsscc_info_Node_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_Node_default_instance_;
    new (ptr) ::energy_platform::Node();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::Node::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Node_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_Node_Env_2eproto}, {
      &scc_info_NodeParams_Env_2eproto.base,}};

static void InitDefaultsscc_info_NodeParams_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_NodeParams_default_instance_;
    new (ptr) ::energy_platform::NodeParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::NodeParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NodeParams_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_NodeParams_Env_2eproto}, {}};

static void InitDefaultsscc_info_Observation_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_Observation_default_instance_;
    new (ptr) ::energy_platform::Observation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::Observation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Observation_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_Observation_Env_2eproto}, {
      &scc_info_Node_Env_2eproto.base,
      &scc_info_Edge_Env_2eproto.base,}};

static void InitDefaultsscc_info_ResetRequest_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_ResetRequest_default_instance_;
    new (ptr) ::energy_platform::ResetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::ResetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResetRequest_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ResetRequest_Env_2eproto}, {}};

static void InitDefaultsscc_info_ResetResponse_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_ResetResponse_default_instance_;
    new (ptr) ::energy_platform::ResetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::ResetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResetResponse_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ResetResponse_Env_2eproto}, {
      &scc_info_Observation_Env_2eproto.base,}};

static void InitDefaultsscc_info_SetCurrentTaskRequest_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_SetCurrentTaskRequest_default_instance_;
    new (ptr) ::energy_platform::SetCurrentTaskRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::SetCurrentTaskRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetCurrentTaskRequest_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SetCurrentTaskRequest_Env_2eproto}, {}};

static void InitDefaultsscc_info_SetCurrentTaskResponse_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_SetCurrentTaskResponse_default_instance_;
    new (ptr) ::energy_platform::SetCurrentTaskResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::SetCurrentTaskResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetCurrentTaskResponse_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SetCurrentTaskResponse_Env_2eproto}, {}};

static void InitDefaultsscc_info_SetDataLocationRequest_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_SetDataLocationRequest_default_instance_;
    new (ptr) ::energy_platform::SetDataLocationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::SetDataLocationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetDataLocationRequest_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SetDataLocationRequest_Env_2eproto}, {}};

static void InitDefaultsscc_info_SetDataLocationResponse_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_SetDataLocationResponse_default_instance_;
    new (ptr) ::energy_platform::SetDataLocationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::SetDataLocationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetDataLocationResponse_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SetDataLocationResponse_Env_2eproto}, {}};

static void InitDefaultsscc_info_StepRequest_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_StepRequest_default_instance_;
    new (ptr) ::energy_platform::StepRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::StepRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StepRequest_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_StepRequest_Env_2eproto}, {
      &scc_info_Action_Env_2eproto.base,}};

static void InitDefaultsscc_info_StepResponse_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_StepResponse_default_instance_;
    new (ptr) ::energy_platform::StepResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::StepResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StepResponse_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_StepResponse_Env_2eproto}, {
      &scc_info_Observation_Env_2eproto.base,}};

static void InitDefaultsscc_info_StopRequest_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_StopRequest_default_instance_;
    new (ptr) ::energy_platform::StopRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::StopRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopRequest_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StopRequest_Env_2eproto}, {}};

static void InitDefaultsscc_info_StopResponse_Env_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::energy_platform::_StopResponse_default_instance_;
    new (ptr) ::energy_platform::StopResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::energy_platform::StopResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopResponse_Env_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_StopResponse_Env_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Env_2eproto[20];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Env_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Env_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Env_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::NodeParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::NodeParams, param_type_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::NodeParams, param_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::EdgeParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::EdgeParams, param_type_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::EdgeParams, param_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Node, uid_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::Node, node_params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Edge, uid_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::Edge, edge_params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Observation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Observation, nodes_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::Observation, edges_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Action, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::Action, uid_),
  offsetof(::energy_platform::ActionDefaultTypeInternal, float_value_),
  offsetof(::energy_platform::ActionDefaultTypeInternal, int_value_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::Action, info_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::Action, action_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::AllowedActionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::AllowedActionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::AllowedActionsResponse, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::ResetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::ResetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::ResetResponse, reset_status_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::ResetResponse, observation_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::ResetResponse, reset_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::StepRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::StepRequest, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::StepResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::StepResponse, observation_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::StepResponse, reward_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::StepResponse, done_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::StepResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::StopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::StopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::SetDataLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::SetDataLocationRequest, data_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::SetDataLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::SetDataLocationResponse, status_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::SetDataLocationResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::SetCurrentTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::SetCurrentTaskRequest, current_task_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::SetCurrentTaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, action_dim_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, observation_dim_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, is_discrete_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, low_action_value_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, high_action_value_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, discrete_action_dimension_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, low_observation_value_),
  PROTOBUF_FIELD_OFFSET(::energy_platform::GetEnvDescriptionResponse, high_observation_value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::energy_platform::NodeParams)},
  { 7, -1, sizeof(::energy_platform::EdgeParams)},
  { 14, -1, sizeof(::energy_platform::Node)},
  { 21, -1, sizeof(::energy_platform::Edge)},
  { 28, -1, sizeof(::energy_platform::Observation)},
  { 35, -1, sizeof(::energy_platform::Action)},
  { 45, -1, sizeof(::energy_platform::AllowedActionsRequest)},
  { 50, -1, sizeof(::energy_platform::AllowedActionsResponse)},
  { 56, -1, sizeof(::energy_platform::ResetRequest)},
  { 61, -1, sizeof(::energy_platform::ResetResponse)},
  { 69, -1, sizeof(::energy_platform::StepRequest)},
  { 75, -1, sizeof(::energy_platform::StepResponse)},
  { 84, -1, sizeof(::energy_platform::StopRequest)},
  { 89, -1, sizeof(::energy_platform::StopResponse)},
  { 94, -1, sizeof(::energy_platform::SetDataLocationRequest)},
  { 100, -1, sizeof(::energy_platform::SetDataLocationResponse)},
  { 107, -1, sizeof(::energy_platform::SetCurrentTaskRequest)},
  { 113, -1, sizeof(::energy_platform::SetCurrentTaskResponse)},
  { 118, -1, sizeof(::energy_platform::GetEnvDescriptionRequest)},
  { 123, -1, sizeof(::energy_platform::GetEnvDescriptionResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_NodeParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_EdgeParams_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_Node_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_Edge_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_Observation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_Action_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_AllowedActionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_AllowedActionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_ResetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_ResetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_StepRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_StepResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_StopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_StopResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_SetDataLocationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_SetDataLocationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_SetCurrentTaskRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_SetCurrentTaskResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_GetEnvDescriptionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::energy_platform::_GetEnvDescriptionResponse_default_instance_),
};

const char descriptor_table_protodef_Env_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tEnv.proto\022\017energy_platform\"w\n\nNodePara"
  "ms\0229\n\nparam_type\030\001 \001(\0162%.energy_platform"
  ".NodeParams.ParamType\022\023\n\013param_value\030\002 \001"
  "(\002\"\031\n\tParamType\022\005\n\001P\020\000\022\005\n\001T\020\001\"p\n\nEdgePar"
  "ams\0229\n\nparam_type\030\001 \001(\0162%.energy_platfor"
  "m.EdgeParams.ParamType\022\023\n\013param_value\030\002 "
  "\001(\002\"\022\n\tParamType\022\005\n\001Q\020\000\"E\n\004Node\022\013\n\003uid\030\001"
  " \001(\005\0220\n\013node_params\030\002 \003(\0132\033.energy_platf"
  "orm.NodeParams\"E\n\004Edge\022\013\n\003uid\030\001 \001(\005\0220\n\013e"
  "dge_params\030\002 \003(\0132\033.energy_platform.EdgeP"
  "arams\"Y\n\013Observation\022$\n\005nodes\030\001 \003(\0132\025.en"
  "ergy_platform.Node\022$\n\005edges\030\002 \003(\0132\025.ener"
  "gy_platform.Edge\"_\n\006Action\022\013\n\003uid\030\001 \001(\t\022"
  "\025\n\013float_value\030\002 \001(\002H\000\022\023\n\tint_value\030\003 \001("
  "\003H\000\022\014\n\004info\030\004 \001(\tB\016\n\014action_value\"\027\n\025All"
  "owedActionsRequest\"B\n\026AllowedActionsResp"
  "onse\022(\n\007actions\030\001 \003(\0132\027.energy_platform."
  "Action\"\016\n\014ResetRequest\"\320\001\n\rResetResponse"
  "\022@\n\014reset_status\030\001 \001(\0162*.energy_platform"
  ".ResetResponse.ResetStatus\0221\n\013observatio"
  "n\030\002 \001(\0132\034.energy_platform.Observation\022\022\n"
  "\nreset_info\030\003 \001(\t\"6\n\013ResetStatus\022\025\n\021READ"
  "Y_TO_SIMULATE\020\000\022\020\n\014RESET_FAILED\020\001\"7\n\013Ste"
  "pRequest\022(\n\007actions\030\001 \003(\0132\027.energy_platf"
  "orm.Action\"m\n\014StepResponse\0221\n\013observatio"
  "n\030\001 \001(\0132\034.energy_platform.Observation\022\016\n"
  "\006reward\030\002 \001(\002\022\014\n\004done\030\003 \001(\010\022\014\n\004info\030\004 \001("
  "\t\"\r\n\013StopRequest\"\016\n\014StopResponse\"+\n\026SetD"
  "ataLocationRequest\022\021\n\tdata_path\030\001 \001(\t\"\231\001"
  "\n\027SetDataLocationResponse\022G\n\006status\030\001 \001("
  "\01627.energy_platform.SetDataLocationRespo"
  "nse.LoadDataStatus\022\017\n\007message\030\002 \001(\t\"$\n\016L"
  "oadDataStatus\022\006\n\002OK\020\000\022\n\n\006FAILED\020\001\"D\n\025Set"
  "CurrentTaskRequest\022+\n\014current_task\030\001 \001(\016"
  "2\025.energy_platform.Task\"\030\n\026SetCurrentTas"
  "kResponse\"\032\n\030GetEnvDescriptionRequest\"\364\001"
  "\n\031GetEnvDescriptionResponse\022\022\n\naction_di"
  "m\030\001 \001(\005\022\027\n\017observation_dim\030\002 \001(\005\022\023\n\013is_d"
  "iscrete\030\003 \001(\010\022\030\n\020low_action_value\030\004 \001(\002\022"
  "\031\n\021high_action_value\030\005 \001(\002\022!\n\031discrete_a"
  "ction_dimension\030\006 \001(\005\022\035\n\025low_observation"
  "_value\030\007 \001(\002\022\036\n\026high_observation_value\030\010"
  " \001(\002*i\n\004Task\022\r\n\tUNDEFINED\020\000\022\020\n\014FEED_FORW"
  "ARD\020\001\022 \n\034AVAILABLE_TECHNOLOGICAL_MODE\020\002\022"
  "\022\n\016MAX_THROUGHPUT\020\003\022\n\n\006SIMPLE\020\0042\362\004\n\003Env\022"
  "d\n\017SetDataLocation\022\'.energy_platform.Set"
  "DataLocationRequest\032(.energy_platform.Se"
  "tDataLocationResponse\022j\n\021GetEnvDescripti"
  "on\022).energy_platform.GetEnvDescriptionRe"
  "quest\032*.energy_platform.GetEnvDescriptio"
  "nResponse\022a\n\016SetCurrentTask\022&.energy_pla"
  "tform.SetCurrentTaskRequest\032\'.energy_pla"
  "tform.SetCurrentTaskResponse\022d\n\021GetAllow"
  "edActions\022&.energy_platform.AllowedActio"
  "nsRequest\032\'.energy_platform.AllowedActio"
  "nsResponse\022F\n\005Reset\022\035.energy_platform.Re"
  "setRequest\032\036.energy_platform.ResetRespon"
  "se\022C\n\004Step\022\034.energy_platform.StepRequest"
  "\032\035.energy_platform.StepResponse\022C\n\004Stop\022"
  "\034.energy_platform.StopRequest\032\035.energy_p"
  "latform.StopResponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Env_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Env_2eproto_sccs[20] = {
  &scc_info_Action_Env_2eproto.base,
  &scc_info_AllowedActionsRequest_Env_2eproto.base,
  &scc_info_AllowedActionsResponse_Env_2eproto.base,
  &scc_info_Edge_Env_2eproto.base,
  &scc_info_EdgeParams_Env_2eproto.base,
  &scc_info_GetEnvDescriptionRequest_Env_2eproto.base,
  &scc_info_GetEnvDescriptionResponse_Env_2eproto.base,
  &scc_info_Node_Env_2eproto.base,
  &scc_info_NodeParams_Env_2eproto.base,
  &scc_info_Observation_Env_2eproto.base,
  &scc_info_ResetRequest_Env_2eproto.base,
  &scc_info_ResetResponse_Env_2eproto.base,
  &scc_info_SetCurrentTaskRequest_Env_2eproto.base,
  &scc_info_SetCurrentTaskResponse_Env_2eproto.base,
  &scc_info_SetDataLocationRequest_Env_2eproto.base,
  &scc_info_SetDataLocationResponse_Env_2eproto.base,
  &scc_info_StepRequest_Env_2eproto.base,
  &scc_info_StepResponse_Env_2eproto.base,
  &scc_info_StopRequest_Env_2eproto.base,
  &scc_info_StopResponse_Env_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Env_2eproto_once;
static bool descriptor_table_Env_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Env_2eproto = {
  &descriptor_table_Env_2eproto_initialized, descriptor_table_protodef_Env_2eproto, "Env.proto", 2428,
  &descriptor_table_Env_2eproto_once, descriptor_table_Env_2eproto_sccs, descriptor_table_Env_2eproto_deps, 20, 0,
  schemas, file_default_instances, TableStruct_Env_2eproto::offsets,
  file_level_metadata_Env_2eproto, 20, file_level_enum_descriptors_Env_2eproto, file_level_service_descriptors_Env_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Env_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Env_2eproto), true);
namespace energy_platform {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NodeParams_ParamType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Env_2eproto);
  return file_level_enum_descriptors_Env_2eproto[0];
}
bool NodeParams_ParamType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr NodeParams_ParamType NodeParams::P;
constexpr NodeParams_ParamType NodeParams::T;
constexpr NodeParams_ParamType NodeParams::ParamType_MIN;
constexpr NodeParams_ParamType NodeParams::ParamType_MAX;
constexpr int NodeParams::ParamType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EdgeParams_ParamType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Env_2eproto);
  return file_level_enum_descriptors_Env_2eproto[1];
}
bool EdgeParams_ParamType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr EdgeParams_ParamType EdgeParams::Q;
constexpr EdgeParams_ParamType EdgeParams::ParamType_MIN;
constexpr EdgeParams_ParamType EdgeParams::ParamType_MAX;
constexpr int EdgeParams::ParamType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResetResponse_ResetStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Env_2eproto);
  return file_level_enum_descriptors_Env_2eproto[2];
}
bool ResetResponse_ResetStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ResetResponse_ResetStatus ResetResponse::READY_TO_SIMULATE;
constexpr ResetResponse_ResetStatus ResetResponse::RESET_FAILED;
constexpr ResetResponse_ResetStatus ResetResponse::ResetStatus_MIN;
constexpr ResetResponse_ResetStatus ResetResponse::ResetStatus_MAX;
constexpr int ResetResponse::ResetStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SetDataLocationResponse_LoadDataStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Env_2eproto);
  return file_level_enum_descriptors_Env_2eproto[3];
}
bool SetDataLocationResponse_LoadDataStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SetDataLocationResponse_LoadDataStatus SetDataLocationResponse::OK;
constexpr SetDataLocationResponse_LoadDataStatus SetDataLocationResponse::FAILED;
constexpr SetDataLocationResponse_LoadDataStatus SetDataLocationResponse::LoadDataStatus_MIN;
constexpr SetDataLocationResponse_LoadDataStatus SetDataLocationResponse::LoadDataStatus_MAX;
constexpr int SetDataLocationResponse::LoadDataStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Task_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Env_2eproto);
  return file_level_enum_descriptors_Env_2eproto[4];
}
bool Task_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void NodeParams::InitAsDefaultInstance() {
}
class NodeParams::_Internal {
 public:
};

NodeParams::NodeParams()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.NodeParams)
}
NodeParams::NodeParams(const NodeParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&param_type_, &from.param_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_value_) -
    reinterpret_cast<char*>(&param_type_)) + sizeof(param_value_));
  // @@protoc_insertion_point(copy_constructor:energy_platform.NodeParams)
}

void NodeParams::SharedCtor() {
  ::memset(&param_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_value_) -
      reinterpret_cast<char*>(&param_type_)) + sizeof(param_value_));
}

NodeParams::~NodeParams() {
  // @@protoc_insertion_point(destructor:energy_platform.NodeParams)
  SharedDtor();
}

void NodeParams::SharedDtor() {
}

void NodeParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeParams& NodeParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NodeParams_Env_2eproto.base);
  return *internal_default_instance();
}


void NodeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.NodeParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&param_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_value_) -
      reinterpret_cast<char*>(&param_type_)) + sizeof(param_value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NodeParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .energy_platform.NodeParams.ParamType param_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_param_type(static_cast<::energy_platform::NodeParams_ParamType>(val));
        } else goto handle_unusual;
        continue;
      // float param_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          param_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NodeParams::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.NodeParams)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .energy_platform.NodeParams.ParamType param_type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_param_type(static_cast< ::energy_platform::NodeParams_ParamType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float param_value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.NodeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.NodeParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NodeParams::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.NodeParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.NodeParams.ParamType param_type = 1;
  if (this->param_type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->param_type(), output);
  }

  // float param_value = 2;
  if (!(this->param_value() <= 0 && this->param_value() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->param_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.NodeParams)
}

::PROTOBUF_NAMESPACE_ID::uint8* NodeParams::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.NodeParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.NodeParams.ParamType param_type = 1;
  if (this->param_type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->param_type(), target);
  }

  // float param_value = 2;
  if (!(this->param_value() <= 0 && this->param_value() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->param_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.NodeParams)
  return target;
}

size_t NodeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.NodeParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .energy_platform.NodeParams.ParamType param_type = 1;
  if (this->param_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->param_type());
  }

  // float param_value = 2;
  if (!(this->param_value() <= 0 && this->param_value() >= 0)) {
    total_size += 1 + 4;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.NodeParams)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NodeParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.NodeParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.NodeParams)
    MergeFrom(*source);
  }
}

void NodeParams::MergeFrom(const NodeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.NodeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param_type() != 0) {
    set_param_type(from.param_type());
  }
  if (!(from.param_value() <= 0 && from.param_value() >= 0)) {
    set_param_value(from.param_value());
  }
}

void NodeParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.NodeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeParams::CopyFrom(const NodeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.NodeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeParams::IsInitialized() const {
  return true;
}

void NodeParams::InternalSwap(NodeParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(param_type_, other->param_type_);
  swap(param_value_, other->param_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EdgeParams::InitAsDefaultInstance() {
}
class EdgeParams::_Internal {
 public:
};

EdgeParams::EdgeParams()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.EdgeParams)
}
EdgeParams::EdgeParams(const EdgeParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&param_type_, &from.param_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_value_) -
    reinterpret_cast<char*>(&param_type_)) + sizeof(param_value_));
  // @@protoc_insertion_point(copy_constructor:energy_platform.EdgeParams)
}

void EdgeParams::SharedCtor() {
  ::memset(&param_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_value_) -
      reinterpret_cast<char*>(&param_type_)) + sizeof(param_value_));
}

EdgeParams::~EdgeParams() {
  // @@protoc_insertion_point(destructor:energy_platform.EdgeParams)
  SharedDtor();
}

void EdgeParams::SharedDtor() {
}

void EdgeParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EdgeParams& EdgeParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EdgeParams_Env_2eproto.base);
  return *internal_default_instance();
}


void EdgeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.EdgeParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&param_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_value_) -
      reinterpret_cast<char*>(&param_type_)) + sizeof(param_value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EdgeParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .energy_platform.EdgeParams.ParamType param_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_param_type(static_cast<::energy_platform::EdgeParams_ParamType>(val));
        } else goto handle_unusual;
        continue;
      // float param_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          param_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EdgeParams::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.EdgeParams)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .energy_platform.EdgeParams.ParamType param_type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_param_type(static_cast< ::energy_platform::EdgeParams_ParamType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float param_value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.EdgeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.EdgeParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EdgeParams::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.EdgeParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.EdgeParams.ParamType param_type = 1;
  if (this->param_type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->param_type(), output);
  }

  // float param_value = 2;
  if (!(this->param_value() <= 0 && this->param_value() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->param_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.EdgeParams)
}

::PROTOBUF_NAMESPACE_ID::uint8* EdgeParams::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.EdgeParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.EdgeParams.ParamType param_type = 1;
  if (this->param_type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->param_type(), target);
  }

  // float param_value = 2;
  if (!(this->param_value() <= 0 && this->param_value() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->param_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.EdgeParams)
  return target;
}

size_t EdgeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.EdgeParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .energy_platform.EdgeParams.ParamType param_type = 1;
  if (this->param_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->param_type());
  }

  // float param_value = 2;
  if (!(this->param_value() <= 0 && this->param_value() >= 0)) {
    total_size += 1 + 4;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.EdgeParams)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EdgeParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.EdgeParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.EdgeParams)
    MergeFrom(*source);
  }
}

void EdgeParams::MergeFrom(const EdgeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.EdgeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param_type() != 0) {
    set_param_type(from.param_type());
  }
  if (!(from.param_value() <= 0 && from.param_value() >= 0)) {
    set_param_value(from.param_value());
  }
}

void EdgeParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.EdgeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeParams::CopyFrom(const EdgeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.EdgeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeParams::IsInitialized() const {
  return true;
}

void EdgeParams::InternalSwap(EdgeParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(param_type_, other->param_type_);
  swap(param_value_, other->param_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EdgeParams::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Node::InitAsDefaultInstance() {
}
class Node::_Internal {
 public:
};

Node::Node()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.Node)
}
Node::Node(const Node& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      node_params_(from.node_params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:energy_platform.Node)
}

void Node::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Node_Env_2eproto.base);
  uid_ = 0;
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:energy_platform.Node)
  SharedDtor();
}

void Node::SharedDtor() {
}

void Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Node& Node::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Node_Env_2eproto.base);
  return *internal_default_instance();
}


void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.Node)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_params_.Clear();
  uid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Node::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .energy_platform.NodeParams node_params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_node_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Node::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.Node)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .energy_platform.NodeParams node_params = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_node_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.Node)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Node::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.Node)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // repeated .energy_platform.NodeParams node_params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_params_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->node_params(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.Node)
}

::PROTOBUF_NAMESPACE_ID::uint8* Node::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.Node)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // repeated .energy_platform.NodeParams node_params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_params_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->node_params(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.Node)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .energy_platform.NodeParams node_params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->node_params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->node_params(static_cast<int>(i)));
    }
  }

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Node::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Node>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.Node)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_params_.MergeFrom(from.node_params_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void Node::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::InternalSwap(Node* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&node_params_)->InternalSwap(CastToBase(&other->node_params_));
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Node::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Edge::InitAsDefaultInstance() {
}
class Edge::_Internal {
 public:
};

Edge::Edge()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.Edge)
}
Edge::Edge(const Edge& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      edge_params_(from.edge_params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:energy_platform.Edge)
}

void Edge::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Edge_Env_2eproto.base);
  uid_ = 0;
}

Edge::~Edge() {
  // @@protoc_insertion_point(destructor:energy_platform.Edge)
  SharedDtor();
}

void Edge::SharedDtor() {
}

void Edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Edge& Edge::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Edge_Env_2eproto.base);
  return *internal_default_instance();
}


void Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.Edge)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edge_params_.Clear();
  uid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Edge::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .energy_platform.EdgeParams edge_params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_edge_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Edge::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.Edge)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 uid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .energy_platform.EdgeParams edge_params = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_edge_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.Edge)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Edge::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.Edge)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // repeated .energy_platform.EdgeParams edge_params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edge_params_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->edge_params(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.Edge)
}

::PROTOBUF_NAMESPACE_ID::uint8* Edge::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.Edge)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->uid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // repeated .energy_platform.EdgeParams edge_params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edge_params_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->edge_params(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.Edge)
  return target;
}

size_t Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.Edge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .energy_platform.EdgeParams edge_params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->edge_params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->edge_params(static_cast<int>(i)));
    }
  }

  // int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Edge>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.Edge)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.Edge)
    MergeFrom(*source);
  }
}

void Edge::MergeFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  edge_params_.MergeFrom(from.edge_params_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void Edge::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge::CopyFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge::IsInitialized() const {
  return true;
}

void Edge::InternalSwap(Edge* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&edge_params_)->InternalSwap(CastToBase(&other->edge_params_));
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Edge::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Observation::InitAsDefaultInstance() {
}
class Observation::_Internal {
 public:
};

Observation::Observation()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.Observation)
}
Observation::Observation(const Observation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      nodes_(from.nodes_),
      edges_(from.edges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.Observation)
}

void Observation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Observation_Env_2eproto.base);
}

Observation::~Observation() {
  // @@protoc_insertion_point(destructor:energy_platform.Observation)
  SharedDtor();
}

void Observation::SharedDtor() {
}

void Observation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Observation& Observation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Observation_Env_2eproto.base);
  return *internal_default_instance();
}


void Observation::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.Observation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  edges_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Observation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .energy_platform.Node nodes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_nodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .energy_platform.Edge edges = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_edges(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Observation::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.Observation)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .energy_platform.Node nodes = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .energy_platform.Edge edges = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.Observation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.Observation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Observation::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.Observation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .energy_platform.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  // repeated .energy_platform.Edge edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->edges(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.Observation)
}

::PROTOBUF_NAMESPACE_ID::uint8* Observation::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.Observation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .energy_platform.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), target);
  }

  // repeated .energy_platform.Edge edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->edges(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.Observation)
  return target;
}

size_t Observation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.Observation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .energy_platform.Node nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .energy_platform.Edge edges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->edges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->edges(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Observation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.Observation)
  GOOGLE_DCHECK_NE(&from, this);
  const Observation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Observation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.Observation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.Observation)
    MergeFrom(*source);
  }
}

void Observation::MergeFrom(const Observation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.Observation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  edges_.MergeFrom(from.edges_);
}

void Observation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.Observation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Observation::CopyFrom(const Observation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.Observation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Observation::IsInitialized() const {
  return true;
}

void Observation::InternalSwap(Observation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  CastToBase(&edges_)->InternalSwap(CastToBase(&other->edges_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Observation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Action::InitAsDefaultInstance() {
  ::energy_platform::_Action_default_instance_.float_value_ = 0;
  ::energy_platform::_Action_default_instance_.int_value_ = PROTOBUF_LONGLONG(0);
}
class Action::_Internal {
 public:
};

Action::Action()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.Action)
}
Action::Action(const Action& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.uid().empty()) {
    uid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.info().empty()) {
    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  clear_has_action_value();
  switch (from.action_value_case()) {
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case ACTION_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:energy_platform.Action)
}

void Action::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Action_Env_2eproto.base);
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_action_value();
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:energy_platform.Action)
  SharedDtor();
}

void Action::SharedDtor() {
  uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_action_value()) {
    clear_action_value();
  }
}

void Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Action& Action::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Action_Env_2eproto.base);
  return *internal_default_instance();
}


void Action::clear_action_value() {
// @@protoc_insertion_point(one_of_clear_start:energy_platform.Action)
  switch (action_value_case()) {
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case ACTION_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACTION_VALUE_NOT_SET;
}


void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_action_value();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Action::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_uid(), ptr, ctx, "energy_platform.Action.uid");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float float_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          set_float_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int64 int_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          set_int_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_info(), ptr, ctx, "energy_platform.Action.info");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Action::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.Action)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "energy_platform.Action.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {
          clear_action_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &action_value_.float_value_)));
          set_has_float_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int_value = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          clear_action_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &action_value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "energy_platform.Action.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.Action)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Action::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.Action.uid");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // float float_value = 2;
  if (has_float_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->float_value(), output);
  }

  // int64 int_value = 3;
  if (has_int_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->int_value(), output);
  }

  // string info = 4;
  if (this->info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.Action.info");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.Action)
}

::PROTOBUF_NAMESPACE_ID::uint8* Action::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.Action)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.Action.uid");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // float float_value = 2;
  if (has_float_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->float_value(), target);
  }

  // int64 int_value = 3;
  if (has_int_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->int_value(), target);
  }

  // string info = 4;
  if (this->info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.Action.info");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // string info = 4;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->info());
  }

  switch (action_value_case()) {
    // float float_value = 2;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // int64 int_value = 3;
    case kIntValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->int_value());
      break;
    }
    case ACTION_VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Action>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.Action)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  switch (from.action_value_case()) {
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case ACTION_VALUE_NOT_SET: {
      break;
    }
  }
}

void Action::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::InternalSwap(Action* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uid_.Swap(&other->uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  info_.Swap(&other->info_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_value_, other->action_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Action::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AllowedActionsRequest::InitAsDefaultInstance() {
}
class AllowedActionsRequest::_Internal {
 public:
};

AllowedActionsRequest::AllowedActionsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.AllowedActionsRequest)
}
AllowedActionsRequest::AllowedActionsRequest(const AllowedActionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.AllowedActionsRequest)
}

void AllowedActionsRequest::SharedCtor() {
}

AllowedActionsRequest::~AllowedActionsRequest() {
  // @@protoc_insertion_point(destructor:energy_platform.AllowedActionsRequest)
  SharedDtor();
}

void AllowedActionsRequest::SharedDtor() {
}

void AllowedActionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllowedActionsRequest& AllowedActionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AllowedActionsRequest_Env_2eproto.base);
  return *internal_default_instance();
}


void AllowedActionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.AllowedActionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AllowedActionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AllowedActionsRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.AllowedActionsRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.AllowedActionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.AllowedActionsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AllowedActionsRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.AllowedActionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.AllowedActionsRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* AllowedActionsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.AllowedActionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.AllowedActionsRequest)
  return target;
}

size_t AllowedActionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.AllowedActionsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllowedActionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.AllowedActionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AllowedActionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AllowedActionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.AllowedActionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.AllowedActionsRequest)
    MergeFrom(*source);
  }
}

void AllowedActionsRequest::MergeFrom(const AllowedActionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.AllowedActionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AllowedActionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.AllowedActionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllowedActionsRequest::CopyFrom(const AllowedActionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.AllowedActionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllowedActionsRequest::IsInitialized() const {
  return true;
}

void AllowedActionsRequest::InternalSwap(AllowedActionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AllowedActionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AllowedActionsResponse::InitAsDefaultInstance() {
}
class AllowedActionsResponse::_Internal {
 public:
};

AllowedActionsResponse::AllowedActionsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.AllowedActionsResponse)
}
AllowedActionsResponse::AllowedActionsResponse(const AllowedActionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.AllowedActionsResponse)
}

void AllowedActionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AllowedActionsResponse_Env_2eproto.base);
}

AllowedActionsResponse::~AllowedActionsResponse() {
  // @@protoc_insertion_point(destructor:energy_platform.AllowedActionsResponse)
  SharedDtor();
}

void AllowedActionsResponse::SharedDtor() {
}

void AllowedActionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllowedActionsResponse& AllowedActionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AllowedActionsResponse_Env_2eproto.base);
  return *internal_default_instance();
}


void AllowedActionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.AllowedActionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AllowedActionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .energy_platform.Action actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AllowedActionsResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.AllowedActionsResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .energy_platform.Action actions = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.AllowedActionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.AllowedActionsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AllowedActionsResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.AllowedActionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .energy_platform.Action actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->actions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.AllowedActionsResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* AllowedActionsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.AllowedActionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .energy_platform.Action actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->actions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.AllowedActionsResponse)
  return target;
}

size_t AllowedActionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.AllowedActionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .energy_platform.Action actions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->actions(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllowedActionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.AllowedActionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AllowedActionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AllowedActionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.AllowedActionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.AllowedActionsResponse)
    MergeFrom(*source);
  }
}

void AllowedActionsResponse::MergeFrom(const AllowedActionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.AllowedActionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
}

void AllowedActionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.AllowedActionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllowedActionsResponse::CopyFrom(const AllowedActionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.AllowedActionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllowedActionsResponse::IsInitialized() const {
  return true;
}

void AllowedActionsResponse::InternalSwap(AllowedActionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&actions_)->InternalSwap(CastToBase(&other->actions_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AllowedActionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetRequest::InitAsDefaultInstance() {
}
class ResetRequest::_Internal {
 public:
};

ResetRequest::ResetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.ResetRequest)
}
ResetRequest::ResetRequest(const ResetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.ResetRequest)
}

void ResetRequest::SharedCtor() {
}

ResetRequest::~ResetRequest() {
  // @@protoc_insertion_point(destructor:energy_platform.ResetRequest)
  SharedDtor();
}

void ResetRequest::SharedDtor() {
}

void ResetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetRequest& ResetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetRequest_Env_2eproto.base);
  return *internal_default_instance();
}


void ResetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.ResetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResetRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.ResetRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.ResetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.ResetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResetRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.ResetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.ResetRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.ResetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.ResetRequest)
  return target;
}

size_t ResetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.ResetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.ResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.ResetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.ResetRequest)
    MergeFrom(*source);
  }
}

void ResetRequest::MergeFrom(const ResetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.ResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.ResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetRequest::CopyFrom(const ResetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.ResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetRequest::IsInitialized() const {
  return true;
}

void ResetRequest::InternalSwap(ResetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResetResponse::InitAsDefaultInstance() {
  ::energy_platform::_ResetResponse_default_instance_._instance.get_mutable()->observation_ = const_cast< ::energy_platform::Observation*>(
      ::energy_platform::Observation::internal_default_instance());
}
class ResetResponse::_Internal {
 public:
  static const ::energy_platform::Observation& observation(const ResetResponse* msg);
};

const ::energy_platform::Observation&
ResetResponse::_Internal::observation(const ResetResponse* msg) {
  return *msg->observation_;
}
ResetResponse::ResetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.ResetResponse)
}
ResetResponse::ResetResponse(const ResetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reset_info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.reset_info().empty()) {
    reset_info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.reset_info_);
  }
  if (from.has_observation()) {
    observation_ = new ::energy_platform::Observation(*from.observation_);
  } else {
    observation_ = nullptr;
  }
  reset_status_ = from.reset_status_;
  // @@protoc_insertion_point(copy_constructor:energy_platform.ResetResponse)
}

void ResetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResetResponse_Env_2eproto.base);
  reset_info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&observation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reset_status_) -
      reinterpret_cast<char*>(&observation_)) + sizeof(reset_status_));
}

ResetResponse::~ResetResponse() {
  // @@protoc_insertion_point(destructor:energy_platform.ResetResponse)
  SharedDtor();
}

void ResetResponse::SharedDtor() {
  reset_info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete observation_;
}

void ResetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResetResponse& ResetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResetResponse_Env_2eproto.base);
  return *internal_default_instance();
}


void ResetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.ResetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reset_info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && observation_ != nullptr) {
    delete observation_;
  }
  observation_ = nullptr;
  reset_status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .energy_platform.ResetResponse.ResetStatus reset_status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_reset_status(static_cast<::energy_platform::ResetResponse_ResetStatus>(val));
        } else goto handle_unusual;
        continue;
      // .energy_platform.Observation observation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_observation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reset_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_reset_info(), ptr, ctx, "energy_platform.ResetResponse.reset_info");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResetResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.ResetResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .energy_platform.ResetResponse.ResetStatus reset_status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reset_status(static_cast< ::energy_platform::ResetResponse_ResetStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .energy_platform.Observation observation = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_observation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reset_info = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_reset_info()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->reset_info().data(), static_cast<int>(this->reset_info().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "energy_platform.ResetResponse.reset_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.ResetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.ResetResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResetResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.ResetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.ResetResponse.ResetStatus reset_status = 1;
  if (this->reset_status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->reset_status(), output);
  }

  // .energy_platform.Observation observation = 2;
  if (this->has_observation()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::observation(this), output);
  }

  // string reset_info = 3;
  if (this->reset_info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->reset_info().data(), static_cast<int>(this->reset_info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.ResetResponse.reset_info");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reset_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.ResetResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.ResetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.ResetResponse.ResetStatus reset_status = 1;
  if (this->reset_status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->reset_status(), target);
  }

  // .energy_platform.Observation observation = 2;
  if (this->has_observation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::observation(this), target);
  }

  // string reset_info = 3;
  if (this->reset_info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->reset_info().data(), static_cast<int>(this->reset_info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.ResetResponse.reset_info");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->reset_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.ResetResponse)
  return target;
}

size_t ResetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.ResetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reset_info = 3;
  if (this->reset_info().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->reset_info());
  }

  // .energy_platform.Observation observation = 2;
  if (this->has_observation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *observation_);
  }

  // .energy_platform.ResetResponse.ResetStatus reset_status = 1;
  if (this->reset_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->reset_status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.ResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.ResetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.ResetResponse)
    MergeFrom(*source);
  }
}

void ResetResponse::MergeFrom(const ResetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.ResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reset_info().size() > 0) {

    reset_info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.reset_info_);
  }
  if (from.has_observation()) {
    mutable_observation()->::energy_platform::Observation::MergeFrom(from.observation());
  }
  if (from.reset_status() != 0) {
    set_reset_status(from.reset_status());
  }
}

void ResetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.ResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetResponse::CopyFrom(const ResetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.ResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetResponse::IsInitialized() const {
  return true;
}

void ResetResponse::InternalSwap(ResetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  reset_info_.Swap(&other->reset_info_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(observation_, other->observation_);
  swap(reset_status_, other->reset_status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StepRequest::InitAsDefaultInstance() {
}
class StepRequest::_Internal {
 public:
};

StepRequest::StepRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.StepRequest)
}
StepRequest::StepRequest(const StepRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.StepRequest)
}

void StepRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StepRequest_Env_2eproto.base);
}

StepRequest::~StepRequest() {
  // @@protoc_insertion_point(destructor:energy_platform.StepRequest)
  SharedDtor();
}

void StepRequest::SharedDtor() {
}

void StepRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StepRequest& StepRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StepRequest_Env_2eproto.base);
  return *internal_default_instance();
}


void StepRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.StepRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StepRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .energy_platform.Action actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StepRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.StepRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .energy_platform.Action actions = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.StepRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.StepRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StepRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.StepRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .energy_platform.Action actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->actions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.StepRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* StepRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.StepRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .energy_platform.Action actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->actions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.StepRequest)
  return target;
}

size_t StepRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.StepRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .energy_platform.Action actions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->actions(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StepRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.StepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StepRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StepRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.StepRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.StepRequest)
    MergeFrom(*source);
  }
}

void StepRequest::MergeFrom(const StepRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.StepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
}

void StepRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.StepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StepRequest::CopyFrom(const StepRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.StepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepRequest::IsInitialized() const {
  return true;
}

void StepRequest::InternalSwap(StepRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&actions_)->InternalSwap(CastToBase(&other->actions_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StepRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StepResponse::InitAsDefaultInstance() {
  ::energy_platform::_StepResponse_default_instance_._instance.get_mutable()->observation_ = const_cast< ::energy_platform::Observation*>(
      ::energy_platform::Observation::internal_default_instance());
}
class StepResponse::_Internal {
 public:
  static const ::energy_platform::Observation& observation(const StepResponse* msg);
};

const ::energy_platform::Observation&
StepResponse::_Internal::observation(const StepResponse* msg) {
  return *msg->observation_;
}
StepResponse::StepResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.StepResponse)
}
StepResponse::StepResponse(const StepResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.info().empty()) {
    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.has_observation()) {
    observation_ = new ::energy_platform::Observation(*from.observation_);
  } else {
    observation_ = nullptr;
  }
  ::memcpy(&reward_, &from.reward_,
    static_cast<size_t>(reinterpret_cast<char*>(&done_) -
    reinterpret_cast<char*>(&reward_)) + sizeof(done_));
  // @@protoc_insertion_point(copy_constructor:energy_platform.StepResponse)
}

void StepResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StepResponse_Env_2eproto.base);
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&observation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&done_) -
      reinterpret_cast<char*>(&observation_)) + sizeof(done_));
}

StepResponse::~StepResponse() {
  // @@protoc_insertion_point(destructor:energy_platform.StepResponse)
  SharedDtor();
}

void StepResponse::SharedDtor() {
  info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete observation_;
}

void StepResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StepResponse& StepResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StepResponse_Env_2eproto.base);
  return *internal_default_instance();
}


void StepResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.StepResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && observation_ != nullptr) {
    delete observation_;
  }
  observation_ = nullptr;
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&done_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(done_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StepResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .energy_platform.Observation observation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_observation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float reward = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          reward_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // bool done = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          done_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_info(), ptr, ctx, "energy_platform.StepResponse.info");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StepResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.StepResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .energy_platform.Observation observation = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_observation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float reward = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (21 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool done = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &done_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "energy_platform.StepResponse.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.StepResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.StepResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StepResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.StepResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.Observation observation = 1;
  if (this->has_observation()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::observation(this), output);
  }

  // float reward = 2;
  if (!(this->reward() <= 0 && this->reward() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(2, this->reward(), output);
  }

  // bool done = 3;
  if (this->done() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->done(), output);
  }

  // string info = 4;
  if (this->info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.StepResponse.info");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.StepResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* StepResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.StepResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.Observation observation = 1;
  if (this->has_observation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::observation(this), target);
  }

  // float reward = 2;
  if (!(this->reward() <= 0 && this->reward() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->reward(), target);
  }

  // bool done = 3;
  if (this->done() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->done(), target);
  }

  // string info = 4;
  if (this->info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.StepResponse.info");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        4, this->info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.StepResponse)
  return target;
}

size_t StepResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.StepResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string info = 4;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->info());
  }

  // .energy_platform.Observation observation = 1;
  if (this->has_observation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *observation_);
  }

  // float reward = 2;
  if (!(this->reward() <= 0 && this->reward() >= 0)) {
    total_size += 1 + 4;
  }

  // bool done = 3;
  if (this->done() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StepResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.StepResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StepResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StepResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.StepResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.StepResponse)
    MergeFrom(*source);
  }
}

void StepResponse::MergeFrom(const StepResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.StepResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.has_observation()) {
    mutable_observation()->::energy_platform::Observation::MergeFrom(from.observation());
  }
  if (!(from.reward() <= 0 && from.reward() >= 0)) {
    set_reward(from.reward());
  }
  if (from.done() != 0) {
    set_done(from.done());
  }
}

void StepResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.StepResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StepResponse::CopyFrom(const StepResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.StepResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepResponse::IsInitialized() const {
  return true;
}

void StepResponse::InternalSwap(StepResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  info_.Swap(&other->info_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(observation_, other->observation_);
  swap(reward_, other->reward_);
  swap(done_, other->done_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StepResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopRequest::InitAsDefaultInstance() {
}
class StopRequest::_Internal {
 public:
};

StopRequest::StopRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.StopRequest)
}
StopRequest::StopRequest(const StopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.StopRequest)
}

void StopRequest::SharedCtor() {
}

StopRequest::~StopRequest() {
  // @@protoc_insertion_point(destructor:energy_platform.StopRequest)
  SharedDtor();
}

void StopRequest::SharedDtor() {
}

void StopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopRequest& StopRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopRequest_Env_2eproto.base);
  return *internal_default_instance();
}


void StopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.StopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StopRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.StopRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.StopRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.StopRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StopRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.StopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.StopRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.StopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.StopRequest)
  return target;
}

size_t StopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.StopRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.StopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.StopRequest)
    MergeFrom(*source);
  }
}

void StopRequest::MergeFrom(const StopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRequest::CopyFrom(const StopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRequest::IsInitialized() const {
  return true;
}

void StopRequest::InternalSwap(StopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopResponse::InitAsDefaultInstance() {
}
class StopResponse::_Internal {
 public:
};

StopResponse::StopResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.StopResponse)
}
StopResponse::StopResponse(const StopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.StopResponse)
}

void StopResponse::SharedCtor() {
}

StopResponse::~StopResponse() {
  // @@protoc_insertion_point(destructor:energy_platform.StopResponse)
  SharedDtor();
}

void StopResponse::SharedDtor() {
}

void StopResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopResponse& StopResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopResponse_Env_2eproto.base);
  return *internal_default_instance();
}


void StopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.StopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StopResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StopResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.StopResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.StopResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.StopResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StopResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.StopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.StopResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* StopResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.StopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.StopResponse)
  return target;
}

size_t StopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.StopResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.StopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.StopResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.StopResponse)
    MergeFrom(*source);
  }
}

void StopResponse::MergeFrom(const StopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.StopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.StopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopResponse::CopyFrom(const StopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.StopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopResponse::IsInitialized() const {
  return true;
}

void StopResponse::InternalSwap(StopResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetDataLocationRequest::InitAsDefaultInstance() {
}
class SetDataLocationRequest::_Internal {
 public:
};

SetDataLocationRequest::SetDataLocationRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.SetDataLocationRequest)
}
SetDataLocationRequest::SetDataLocationRequest(const SetDataLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.data_path().empty()) {
    data_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_path_);
  }
  // @@protoc_insertion_point(copy_constructor:energy_platform.SetDataLocationRequest)
}

void SetDataLocationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetDataLocationRequest_Env_2eproto.base);
  data_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetDataLocationRequest::~SetDataLocationRequest() {
  // @@protoc_insertion_point(destructor:energy_platform.SetDataLocationRequest)
  SharedDtor();
}

void SetDataLocationRequest::SharedDtor() {
  data_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetDataLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetDataLocationRequest& SetDataLocationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetDataLocationRequest_Env_2eproto.base);
  return *internal_default_instance();
}


void SetDataLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.SetDataLocationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetDataLocationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string data_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_data_path(), ptr, ctx, "energy_platform.SetDataLocationRequest.data_path");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetDataLocationRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.SetDataLocationRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data_path = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_data_path()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->data_path().data(), static_cast<int>(this->data_path().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "energy_platform.SetDataLocationRequest.data_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.SetDataLocationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.SetDataLocationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetDataLocationRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.SetDataLocationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_path = 1;
  if (this->data_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->data_path().data(), static_cast<int>(this->data_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.SetDataLocationRequest.data_path");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.SetDataLocationRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* SetDataLocationRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.SetDataLocationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_path = 1;
  if (this->data_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->data_path().data(), static_cast<int>(this->data_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.SetDataLocationRequest.data_path");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->data_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.SetDataLocationRequest)
  return target;
}

size_t SetDataLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.SetDataLocationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_path = 1;
  if (this->data_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->data_path());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetDataLocationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.SetDataLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDataLocationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetDataLocationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.SetDataLocationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.SetDataLocationRequest)
    MergeFrom(*source);
  }
}

void SetDataLocationRequest::MergeFrom(const SetDataLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.SetDataLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_path().size() > 0) {

    data_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_path_);
  }
}

void SetDataLocationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.SetDataLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDataLocationRequest::CopyFrom(const SetDataLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.SetDataLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDataLocationRequest::IsInitialized() const {
  return true;
}

void SetDataLocationRequest::InternalSwap(SetDataLocationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_path_.Swap(&other->data_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetDataLocationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetDataLocationResponse::InitAsDefaultInstance() {
}
class SetDataLocationResponse::_Internal {
 public:
};

SetDataLocationResponse::SetDataLocationResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.SetDataLocationResponse)
}
SetDataLocationResponse::SetDataLocationResponse(const SetDataLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:energy_platform.SetDataLocationResponse)
}

void SetDataLocationResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetDataLocationResponse_Env_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

SetDataLocationResponse::~SetDataLocationResponse() {
  // @@protoc_insertion_point(destructor:energy_platform.SetDataLocationResponse)
  SharedDtor();
}

void SetDataLocationResponse::SharedDtor() {
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetDataLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetDataLocationResponse& SetDataLocationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetDataLocationResponse_Env_2eproto.base);
  return *internal_default_instance();
}


void SetDataLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.SetDataLocationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetDataLocationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .energy_platform.SetDataLocationResponse.LoadDataStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_status(static_cast<::energy_platform::SetDataLocationResponse_LoadDataStatus>(val));
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_message(), ptr, ctx, "energy_platform.SetDataLocationResponse.message");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetDataLocationResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.SetDataLocationResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .energy_platform.SetDataLocationResponse.LoadDataStatus status = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::energy_platform::SetDataLocationResponse_LoadDataStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "energy_platform.SetDataLocationResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.SetDataLocationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.SetDataLocationResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetDataLocationResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.SetDataLocationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.SetDataLocationResponse.LoadDataStatus status = 1;
  if (this->status() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.SetDataLocationResponse.message");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.SetDataLocationResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* SetDataLocationResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.SetDataLocationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.SetDataLocationResponse.LoadDataStatus status = 1;
  if (this->status() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "energy_platform.SetDataLocationResponse.message");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.SetDataLocationResponse)
  return target;
}

size_t SetDataLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.SetDataLocationResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .energy_platform.SetDataLocationResponse.LoadDataStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetDataLocationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.SetDataLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDataLocationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetDataLocationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.SetDataLocationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.SetDataLocationResponse)
    MergeFrom(*source);
  }
}

void SetDataLocationResponse::MergeFrom(const SetDataLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.SetDataLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void SetDataLocationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.SetDataLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDataLocationResponse::CopyFrom(const SetDataLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.SetDataLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDataLocationResponse::IsInitialized() const {
  return true;
}

void SetDataLocationResponse::InternalSwap(SetDataLocationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetDataLocationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetCurrentTaskRequest::InitAsDefaultInstance() {
}
class SetCurrentTaskRequest::_Internal {
 public:
};

SetCurrentTaskRequest::SetCurrentTaskRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.SetCurrentTaskRequest)
}
SetCurrentTaskRequest::SetCurrentTaskRequest(const SetCurrentTaskRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  current_task_ = from.current_task_;
  // @@protoc_insertion_point(copy_constructor:energy_platform.SetCurrentTaskRequest)
}

void SetCurrentTaskRequest::SharedCtor() {
  current_task_ = 0;
}

SetCurrentTaskRequest::~SetCurrentTaskRequest() {
  // @@protoc_insertion_point(destructor:energy_platform.SetCurrentTaskRequest)
  SharedDtor();
}

void SetCurrentTaskRequest::SharedDtor() {
}

void SetCurrentTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCurrentTaskRequest& SetCurrentTaskRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetCurrentTaskRequest_Env_2eproto.base);
  return *internal_default_instance();
}


void SetCurrentTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.SetCurrentTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  current_task_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetCurrentTaskRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .energy_platform.Task current_task = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_current_task(static_cast<::energy_platform::Task>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetCurrentTaskRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.SetCurrentTaskRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .energy_platform.Task current_task = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_current_task(static_cast< ::energy_platform::Task >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.SetCurrentTaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.SetCurrentTaskRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetCurrentTaskRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.SetCurrentTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.Task current_task = 1;
  if (this->current_task() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->current_task(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.SetCurrentTaskRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* SetCurrentTaskRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.SetCurrentTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .energy_platform.Task current_task = 1;
  if (this->current_task() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->current_task(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.SetCurrentTaskRequest)
  return target;
}

size_t SetCurrentTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.SetCurrentTaskRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .energy_platform.Task current_task = 1;
  if (this->current_task() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->current_task());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCurrentTaskRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.SetCurrentTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCurrentTaskRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetCurrentTaskRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.SetCurrentTaskRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.SetCurrentTaskRequest)
    MergeFrom(*source);
  }
}

void SetCurrentTaskRequest::MergeFrom(const SetCurrentTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.SetCurrentTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current_task() != 0) {
    set_current_task(from.current_task());
  }
}

void SetCurrentTaskRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.SetCurrentTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCurrentTaskRequest::CopyFrom(const SetCurrentTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.SetCurrentTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrentTaskRequest::IsInitialized() const {
  return true;
}

void SetCurrentTaskRequest::InternalSwap(SetCurrentTaskRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(current_task_, other->current_task_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrentTaskRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetCurrentTaskResponse::InitAsDefaultInstance() {
}
class SetCurrentTaskResponse::_Internal {
 public:
};

SetCurrentTaskResponse::SetCurrentTaskResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.SetCurrentTaskResponse)
}
SetCurrentTaskResponse::SetCurrentTaskResponse(const SetCurrentTaskResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.SetCurrentTaskResponse)
}

void SetCurrentTaskResponse::SharedCtor() {
}

SetCurrentTaskResponse::~SetCurrentTaskResponse() {
  // @@protoc_insertion_point(destructor:energy_platform.SetCurrentTaskResponse)
  SharedDtor();
}

void SetCurrentTaskResponse::SharedDtor() {
}

void SetCurrentTaskResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCurrentTaskResponse& SetCurrentTaskResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetCurrentTaskResponse_Env_2eproto.base);
  return *internal_default_instance();
}


void SetCurrentTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.SetCurrentTaskResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetCurrentTaskResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetCurrentTaskResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.SetCurrentTaskResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.SetCurrentTaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.SetCurrentTaskResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetCurrentTaskResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.SetCurrentTaskResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.SetCurrentTaskResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* SetCurrentTaskResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.SetCurrentTaskResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.SetCurrentTaskResponse)
  return target;
}

size_t SetCurrentTaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.SetCurrentTaskResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCurrentTaskResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.SetCurrentTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCurrentTaskResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetCurrentTaskResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.SetCurrentTaskResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.SetCurrentTaskResponse)
    MergeFrom(*source);
  }
}

void SetCurrentTaskResponse::MergeFrom(const SetCurrentTaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.SetCurrentTaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetCurrentTaskResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.SetCurrentTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCurrentTaskResponse::CopyFrom(const SetCurrentTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.SetCurrentTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrentTaskResponse::IsInitialized() const {
  return true;
}

void SetCurrentTaskResponse::InternalSwap(SetCurrentTaskResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrentTaskResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEnvDescriptionRequest::InitAsDefaultInstance() {
}
class GetEnvDescriptionRequest::_Internal {
 public:
};

GetEnvDescriptionRequest::GetEnvDescriptionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.GetEnvDescriptionRequest)
}
GetEnvDescriptionRequest::GetEnvDescriptionRequest(const GetEnvDescriptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:energy_platform.GetEnvDescriptionRequest)
}

void GetEnvDescriptionRequest::SharedCtor() {
}

GetEnvDescriptionRequest::~GetEnvDescriptionRequest() {
  // @@protoc_insertion_point(destructor:energy_platform.GetEnvDescriptionRequest)
  SharedDtor();
}

void GetEnvDescriptionRequest::SharedDtor() {
}

void GetEnvDescriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEnvDescriptionRequest& GetEnvDescriptionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEnvDescriptionRequest_Env_2eproto.base);
  return *internal_default_instance();
}


void GetEnvDescriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.GetEnvDescriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetEnvDescriptionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetEnvDescriptionRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.GetEnvDescriptionRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.GetEnvDescriptionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.GetEnvDescriptionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetEnvDescriptionRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.GetEnvDescriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.GetEnvDescriptionRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEnvDescriptionRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.GetEnvDescriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.GetEnvDescriptionRequest)
  return target;
}

size_t GetEnvDescriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.GetEnvDescriptionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEnvDescriptionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.GetEnvDescriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEnvDescriptionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEnvDescriptionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.GetEnvDescriptionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.GetEnvDescriptionRequest)
    MergeFrom(*source);
  }
}

void GetEnvDescriptionRequest::MergeFrom(const GetEnvDescriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.GetEnvDescriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetEnvDescriptionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.GetEnvDescriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEnvDescriptionRequest::CopyFrom(const GetEnvDescriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.GetEnvDescriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEnvDescriptionRequest::IsInitialized() const {
  return true;
}

void GetEnvDescriptionRequest::InternalSwap(GetEnvDescriptionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEnvDescriptionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEnvDescriptionResponse::InitAsDefaultInstance() {
}
class GetEnvDescriptionResponse::_Internal {
 public:
};

GetEnvDescriptionResponse::GetEnvDescriptionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:energy_platform.GetEnvDescriptionResponse)
}
GetEnvDescriptionResponse::GetEnvDescriptionResponse(const GetEnvDescriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&action_dim_, &from.action_dim_,
    static_cast<size_t>(reinterpret_cast<char*>(&high_observation_value_) -
    reinterpret_cast<char*>(&action_dim_)) + sizeof(high_observation_value_));
  // @@protoc_insertion_point(copy_constructor:energy_platform.GetEnvDescriptionResponse)
}

void GetEnvDescriptionResponse::SharedCtor() {
  ::memset(&action_dim_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_observation_value_) -
      reinterpret_cast<char*>(&action_dim_)) + sizeof(high_observation_value_));
}

GetEnvDescriptionResponse::~GetEnvDescriptionResponse() {
  // @@protoc_insertion_point(destructor:energy_platform.GetEnvDescriptionResponse)
  SharedDtor();
}

void GetEnvDescriptionResponse::SharedDtor() {
}

void GetEnvDescriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEnvDescriptionResponse& GetEnvDescriptionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEnvDescriptionResponse_Env_2eproto.base);
  return *internal_default_instance();
}


void GetEnvDescriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:energy_platform.GetEnvDescriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&action_dim_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_observation_value_) -
      reinterpret_cast<char*>(&action_dim_)) + sizeof(high_observation_value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetEnvDescriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 action_dim = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          action_dim_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 observation_dim = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          observation_dim_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_discrete = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          is_discrete_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float low_action_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          low_action_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float high_action_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          high_action_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 discrete_action_dimension = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          discrete_action_dimension_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float low_observation_value = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          low_observation_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float high_observation_value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          high_observation_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetEnvDescriptionResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:energy_platform.GetEnvDescriptionResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 action_dim = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_dim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 observation_dim = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &observation_dim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_discrete = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_discrete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float low_action_value = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (37 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_action_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float high_action_value = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (45 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_action_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 discrete_action_dimension = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &discrete_action_dimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float low_observation_value = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (61 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_observation_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float high_observation_value = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (69 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_observation_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:energy_platform.GetEnvDescriptionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:energy_platform.GetEnvDescriptionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetEnvDescriptionResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:energy_platform.GetEnvDescriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 action_dim = 1;
  if (this->action_dim() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->action_dim(), output);
  }

  // int32 observation_dim = 2;
  if (this->observation_dim() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->observation_dim(), output);
  }

  // bool is_discrete = 3;
  if (this->is_discrete() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->is_discrete(), output);
  }

  // float low_action_value = 4;
  if (!(this->low_action_value() <= 0 && this->low_action_value() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(4, this->low_action_value(), output);
  }

  // float high_action_value = 5;
  if (!(this->high_action_value() <= 0 && this->high_action_value() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(5, this->high_action_value(), output);
  }

  // int32 discrete_action_dimension = 6;
  if (this->discrete_action_dimension() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->discrete_action_dimension(), output);
  }

  // float low_observation_value = 7;
  if (!(this->low_observation_value() <= 0 && this->low_observation_value() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(7, this->low_observation_value(), output);
  }

  // float high_observation_value = 8;
  if (!(this->high_observation_value() <= 0 && this->high_observation_value() >= 0)) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(8, this->high_observation_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:energy_platform.GetEnvDescriptionResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEnvDescriptionResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:energy_platform.GetEnvDescriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 action_dim = 1;
  if (this->action_dim() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->action_dim(), target);
  }

  // int32 observation_dim = 2;
  if (this->observation_dim() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->observation_dim(), target);
  }

  // bool is_discrete = 3;
  if (this->is_discrete() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->is_discrete(), target);
  }

  // float low_action_value = 4;
  if (!(this->low_action_value() <= 0 && this->low_action_value() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->low_action_value(), target);
  }

  // float high_action_value = 5;
  if (!(this->high_action_value() <= 0 && this->high_action_value() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->high_action_value(), target);
  }

  // int32 discrete_action_dimension = 6;
  if (this->discrete_action_dimension() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->discrete_action_dimension(), target);
  }

  // float low_observation_value = 7;
  if (!(this->low_observation_value() <= 0 && this->low_observation_value() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->low_observation_value(), target);
  }

  // float high_observation_value = 8;
  if (!(this->high_observation_value() <= 0 && this->high_observation_value() >= 0)) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->high_observation_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:energy_platform.GetEnvDescriptionResponse)
  return target;
}

size_t GetEnvDescriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:energy_platform.GetEnvDescriptionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 action_dim = 1;
  if (this->action_dim() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->action_dim());
  }

  // int32 observation_dim = 2;
  if (this->observation_dim() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->observation_dim());
  }

  // bool is_discrete = 3;
  if (this->is_discrete() != 0) {
    total_size += 1 + 1;
  }

  // float low_action_value = 4;
  if (!(this->low_action_value() <= 0 && this->low_action_value() >= 0)) {
    total_size += 1 + 4;
  }

  // float high_action_value = 5;
  if (!(this->high_action_value() <= 0 && this->high_action_value() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 discrete_action_dimension = 6;
  if (this->discrete_action_dimension() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->discrete_action_dimension());
  }

  // float low_observation_value = 7;
  if (!(this->low_observation_value() <= 0 && this->low_observation_value() >= 0)) {
    total_size += 1 + 4;
  }

  // float high_observation_value = 8;
  if (!(this->high_observation_value() <= 0 && this->high_observation_value() >= 0)) {
    total_size += 1 + 4;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEnvDescriptionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:energy_platform.GetEnvDescriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEnvDescriptionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEnvDescriptionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:energy_platform.GetEnvDescriptionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:energy_platform.GetEnvDescriptionResponse)
    MergeFrom(*source);
  }
}

void GetEnvDescriptionResponse::MergeFrom(const GetEnvDescriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:energy_platform.GetEnvDescriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action_dim() != 0) {
    set_action_dim(from.action_dim());
  }
  if (from.observation_dim() != 0) {
    set_observation_dim(from.observation_dim());
  }
  if (from.is_discrete() != 0) {
    set_is_discrete(from.is_discrete());
  }
  if (!(from.low_action_value() <= 0 && from.low_action_value() >= 0)) {
    set_low_action_value(from.low_action_value());
  }
  if (!(from.high_action_value() <= 0 && from.high_action_value() >= 0)) {
    set_high_action_value(from.high_action_value());
  }
  if (from.discrete_action_dimension() != 0) {
    set_discrete_action_dimension(from.discrete_action_dimension());
  }
  if (!(from.low_observation_value() <= 0 && from.low_observation_value() >= 0)) {
    set_low_observation_value(from.low_observation_value());
  }
  if (!(from.high_observation_value() <= 0 && from.high_observation_value() >= 0)) {
    set_high_observation_value(from.high_observation_value());
  }
}

void GetEnvDescriptionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:energy_platform.GetEnvDescriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEnvDescriptionResponse::CopyFrom(const GetEnvDescriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:energy_platform.GetEnvDescriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEnvDescriptionResponse::IsInitialized() const {
  return true;
}

void GetEnvDescriptionResponse::InternalSwap(GetEnvDescriptionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_dim_, other->action_dim_);
  swap(observation_dim_, other->observation_dim_);
  swap(is_discrete_, other->is_discrete_);
  swap(low_action_value_, other->low_action_value_);
  swap(high_action_value_, other->high_action_value_);
  swap(discrete_action_dimension_, other->discrete_action_dimension_);
  swap(low_observation_value_, other->low_observation_value_);
  swap(high_observation_value_, other->high_observation_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEnvDescriptionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace energy_platform
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::energy_platform::NodeParams* Arena::CreateMaybeMessage< ::energy_platform::NodeParams >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::NodeParams >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::EdgeParams* Arena::CreateMaybeMessage< ::energy_platform::EdgeParams >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::EdgeParams >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::Node* Arena::CreateMaybeMessage< ::energy_platform::Node >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::Node >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::Edge* Arena::CreateMaybeMessage< ::energy_platform::Edge >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::Edge >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::Observation* Arena::CreateMaybeMessage< ::energy_platform::Observation >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::Observation >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::Action* Arena::CreateMaybeMessage< ::energy_platform::Action >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::Action >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::AllowedActionsRequest* Arena::CreateMaybeMessage< ::energy_platform::AllowedActionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::AllowedActionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::AllowedActionsResponse* Arena::CreateMaybeMessage< ::energy_platform::AllowedActionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::AllowedActionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::ResetRequest* Arena::CreateMaybeMessage< ::energy_platform::ResetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::ResetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::ResetResponse* Arena::CreateMaybeMessage< ::energy_platform::ResetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::ResetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::StepRequest* Arena::CreateMaybeMessage< ::energy_platform::StepRequest >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::StepRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::StepResponse* Arena::CreateMaybeMessage< ::energy_platform::StepResponse >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::StepResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::StopRequest* Arena::CreateMaybeMessage< ::energy_platform::StopRequest >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::StopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::StopResponse* Arena::CreateMaybeMessage< ::energy_platform::StopResponse >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::StopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::SetDataLocationRequest* Arena::CreateMaybeMessage< ::energy_platform::SetDataLocationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::SetDataLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::SetDataLocationResponse* Arena::CreateMaybeMessage< ::energy_platform::SetDataLocationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::SetDataLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::SetCurrentTaskRequest* Arena::CreateMaybeMessage< ::energy_platform::SetCurrentTaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::SetCurrentTaskRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::SetCurrentTaskResponse* Arena::CreateMaybeMessage< ::energy_platform::SetCurrentTaskResponse >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::SetCurrentTaskResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::GetEnvDescriptionRequest* Arena::CreateMaybeMessage< ::energy_platform::GetEnvDescriptionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::GetEnvDescriptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::energy_platform::GetEnvDescriptionResponse* Arena::CreateMaybeMessage< ::energy_platform::GetEnvDescriptionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::energy_platform::GetEnvDescriptionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
