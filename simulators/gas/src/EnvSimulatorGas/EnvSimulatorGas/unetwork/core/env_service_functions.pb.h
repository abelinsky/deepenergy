// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unetwork/core/env_service_functions.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "unetwork/core/tasks.pb.h"
#include "unetwork/core/action.pb.h"
#include "unetwork/core/observation.pb.h"
#include "unetwork/core/optimization_param.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[14]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
namespace unetwork {
class GetEnvDescriptionRequest;
class GetEnvDescriptionRequestDefaultTypeInternal;
extern GetEnvDescriptionRequestDefaultTypeInternal _GetEnvDescriptionRequest_default_instance_;
class GetEnvDescriptionResponse;
class GetEnvDescriptionResponseDefaultTypeInternal;
extern GetEnvDescriptionResponseDefaultTypeInternal _GetEnvDescriptionResponse_default_instance_;
class GetOptimizationParamsRequest;
class GetOptimizationParamsRequestDefaultTypeInternal;
extern GetOptimizationParamsRequestDefaultTypeInternal _GetOptimizationParamsRequest_default_instance_;
class GetOptimizationParamsResponse;
class GetOptimizationParamsResponseDefaultTypeInternal;
extern GetOptimizationParamsResponseDefaultTypeInternal _GetOptimizationParamsResponse_default_instance_;
class LoadDataRequest;
class LoadDataRequestDefaultTypeInternal;
extern LoadDataRequestDefaultTypeInternal _LoadDataRequest_default_instance_;
class LoadDataResponse;
class LoadDataResponseDefaultTypeInternal;
extern LoadDataResponseDefaultTypeInternal _LoadDataResponse_default_instance_;
class ResetRequest;
class ResetRequestDefaultTypeInternal;
extern ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;
class ResetResponse;
class ResetResponseDefaultTypeInternal;
extern ResetResponseDefaultTypeInternal _ResetResponse_default_instance_;
class SetCurrentTaskRequest;
class SetCurrentTaskRequestDefaultTypeInternal;
extern SetCurrentTaskRequestDefaultTypeInternal _SetCurrentTaskRequest_default_instance_;
class SetCurrentTaskResponse;
class SetCurrentTaskResponseDefaultTypeInternal;
extern SetCurrentTaskResponseDefaultTypeInternal _SetCurrentTaskResponse_default_instance_;
class StepRequest;
class StepRequestDefaultTypeInternal;
extern StepRequestDefaultTypeInternal _StepRequest_default_instance_;
class StepResponse;
class StepResponseDefaultTypeInternal;
extern StepResponseDefaultTypeInternal _StepResponse_default_instance_;
class StopRequest;
class StopRequestDefaultTypeInternal;
extern StopRequestDefaultTypeInternal _StopRequest_default_instance_;
class StopResponse;
class StopResponseDefaultTypeInternal;
extern StopResponseDefaultTypeInternal _StopResponse_default_instance_;
}  // namespace unetwork
PROTOBUF_NAMESPACE_OPEN
template<> ::unetwork::GetEnvDescriptionRequest* Arena::CreateMaybeMessage<::unetwork::GetEnvDescriptionRequest>(Arena*);
template<> ::unetwork::GetEnvDescriptionResponse* Arena::CreateMaybeMessage<::unetwork::GetEnvDescriptionResponse>(Arena*);
template<> ::unetwork::GetOptimizationParamsRequest* Arena::CreateMaybeMessage<::unetwork::GetOptimizationParamsRequest>(Arena*);
template<> ::unetwork::GetOptimizationParamsResponse* Arena::CreateMaybeMessage<::unetwork::GetOptimizationParamsResponse>(Arena*);
template<> ::unetwork::LoadDataRequest* Arena::CreateMaybeMessage<::unetwork::LoadDataRequest>(Arena*);
template<> ::unetwork::LoadDataResponse* Arena::CreateMaybeMessage<::unetwork::LoadDataResponse>(Arena*);
template<> ::unetwork::ResetRequest* Arena::CreateMaybeMessage<::unetwork::ResetRequest>(Arena*);
template<> ::unetwork::ResetResponse* Arena::CreateMaybeMessage<::unetwork::ResetResponse>(Arena*);
template<> ::unetwork::SetCurrentTaskRequest* Arena::CreateMaybeMessage<::unetwork::SetCurrentTaskRequest>(Arena*);
template<> ::unetwork::SetCurrentTaskResponse* Arena::CreateMaybeMessage<::unetwork::SetCurrentTaskResponse>(Arena*);
template<> ::unetwork::StepRequest* Arena::CreateMaybeMessage<::unetwork::StepRequest>(Arena*);
template<> ::unetwork::StepResponse* Arena::CreateMaybeMessage<::unetwork::StepResponse>(Arena*);
template<> ::unetwork::StopRequest* Arena::CreateMaybeMessage<::unetwork::StopRequest>(Arena*);
template<> ::unetwork::StopResponse* Arena::CreateMaybeMessage<::unetwork::StopResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace unetwork {

enum LoadDataResponse_LoadDataStatus : int {
  LoadDataResponse_LoadDataStatus_OK = 0,
  LoadDataResponse_LoadDataStatus_FAILED = 1,
  LoadDataResponse_LoadDataStatus_LoadDataResponse_LoadDataStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  LoadDataResponse_LoadDataStatus_LoadDataResponse_LoadDataStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool LoadDataResponse_LoadDataStatus_IsValid(int value);
constexpr LoadDataResponse_LoadDataStatus LoadDataResponse_LoadDataStatus_LoadDataStatus_MIN = LoadDataResponse_LoadDataStatus_OK;
constexpr LoadDataResponse_LoadDataStatus LoadDataResponse_LoadDataStatus_LoadDataStatus_MAX = LoadDataResponse_LoadDataStatus_FAILED;
constexpr int LoadDataResponse_LoadDataStatus_LoadDataStatus_ARRAYSIZE = LoadDataResponse_LoadDataStatus_LoadDataStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LoadDataResponse_LoadDataStatus_descriptor();
template<typename T>
inline const std::string& LoadDataResponse_LoadDataStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, LoadDataResponse_LoadDataStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function LoadDataResponse_LoadDataStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    LoadDataResponse_LoadDataStatus_descriptor(), enum_t_value);
}
inline bool LoadDataResponse_LoadDataStatus_Parse(
    const std::string& name, LoadDataResponse_LoadDataStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<LoadDataResponse_LoadDataStatus>(
    LoadDataResponse_LoadDataStatus_descriptor(), name, value);
}
enum ResetResponse_ResetStatus : int {
  ResetResponse_ResetStatus_READY_TO_SIMULATE = 0,
  ResetResponse_ResetStatus_RESET_FAILED = 1,
  ResetResponse_ResetStatus_ResetResponse_ResetStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ResetResponse_ResetStatus_ResetResponse_ResetStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ResetResponse_ResetStatus_IsValid(int value);
constexpr ResetResponse_ResetStatus ResetResponse_ResetStatus_ResetStatus_MIN = ResetResponse_ResetStatus_READY_TO_SIMULATE;
constexpr ResetResponse_ResetStatus ResetResponse_ResetStatus_ResetStatus_MAX = ResetResponse_ResetStatus_RESET_FAILED;
constexpr int ResetResponse_ResetStatus_ResetStatus_ARRAYSIZE = ResetResponse_ResetStatus_ResetStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResetResponse_ResetStatus_descriptor();
template<typename T>
inline const std::string& ResetResponse_ResetStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ResetResponse_ResetStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ResetResponse_ResetStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ResetResponse_ResetStatus_descriptor(), enum_t_value);
}
inline bool ResetResponse_ResetStatus_Parse(
    const std::string& name, ResetResponse_ResetStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ResetResponse_ResetStatus>(
    ResetResponse_ResetStatus_descriptor(), name, value);
}
// ===================================================================

class LoadDataRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.LoadDataRequest) */ {
 public:
  LoadDataRequest();
  virtual ~LoadDataRequest();

  LoadDataRequest(const LoadDataRequest& from);
  LoadDataRequest(LoadDataRequest&& from) noexcept
    : LoadDataRequest() {
    *this = ::std::move(from);
  }

  inline LoadDataRequest& operator=(const LoadDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadDataRequest& operator=(LoadDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadDataRequest* internal_default_instance() {
    return reinterpret_cast<const LoadDataRequest*>(
               &_LoadDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LoadDataRequest& a, LoadDataRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadDataRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadDataRequest* New() const final {
    return CreateMaybeMessage<LoadDataRequest>(nullptr);
  }

  LoadDataRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadDataRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadDataRequest& from);
  void MergeFrom(const LoadDataRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadDataRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.LoadDataRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataPathFieldNumber = 1,
  };
  // string data_path = 1;
  void clear_data_path();
  const std::string& data_path() const;
  void set_data_path(const std::string& value);
  void set_data_path(std::string&& value);
  void set_data_path(const char* value);
  void set_data_path(const char* value, size_t size);
  std::string* mutable_data_path();
  std::string* release_data_path();
  void set_allocated_data_path(std::string* data_path);

  // @@protoc_insertion_point(class_scope:unetwork.LoadDataRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_path_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class LoadDataResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.LoadDataResponse) */ {
 public:
  LoadDataResponse();
  virtual ~LoadDataResponse();

  LoadDataResponse(const LoadDataResponse& from);
  LoadDataResponse(LoadDataResponse&& from) noexcept
    : LoadDataResponse() {
    *this = ::std::move(from);
  }

  inline LoadDataResponse& operator=(const LoadDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadDataResponse& operator=(LoadDataResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadDataResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadDataResponse* internal_default_instance() {
    return reinterpret_cast<const LoadDataResponse*>(
               &_LoadDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LoadDataResponse& a, LoadDataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadDataResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadDataResponse* New() const final {
    return CreateMaybeMessage<LoadDataResponse>(nullptr);
  }

  LoadDataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadDataResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadDataResponse& from);
  void MergeFrom(const LoadDataResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadDataResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.LoadDataResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef LoadDataResponse_LoadDataStatus LoadDataStatus;
  static constexpr LoadDataStatus OK =
    LoadDataResponse_LoadDataStatus_OK;
  static constexpr LoadDataStatus FAILED =
    LoadDataResponse_LoadDataStatus_FAILED;
  static inline bool LoadDataStatus_IsValid(int value) {
    return LoadDataResponse_LoadDataStatus_IsValid(value);
  }
  static constexpr LoadDataStatus LoadDataStatus_MIN =
    LoadDataResponse_LoadDataStatus_LoadDataStatus_MIN;
  static constexpr LoadDataStatus LoadDataStatus_MAX =
    LoadDataResponse_LoadDataStatus_LoadDataStatus_MAX;
  static constexpr int LoadDataStatus_ARRAYSIZE =
    LoadDataResponse_LoadDataStatus_LoadDataStatus_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  LoadDataStatus_descriptor() {
    return LoadDataResponse_LoadDataStatus_descriptor();
  }
  template<typename T>
  static inline const std::string& LoadDataStatus_Name(T enum_t_value) {
    static_assert(::std::is_same<T, LoadDataStatus>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function LoadDataStatus_Name.");
    return LoadDataResponse_LoadDataStatus_Name(enum_t_value);
  }
  static inline bool LoadDataStatus_Parse(const std::string& name,
      LoadDataStatus* value) {
    return LoadDataResponse_LoadDataStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string message = 2;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);

  // .unetwork.LoadDataResponse.LoadDataStatus status = 1;
  void clear_status();
  ::unetwork::LoadDataResponse_LoadDataStatus status() const;
  void set_status(::unetwork::LoadDataResponse_LoadDataStatus value);

  // @@protoc_insertion_point(class_scope:unetwork.LoadDataResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class GetEnvDescriptionRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.GetEnvDescriptionRequest) */ {
 public:
  GetEnvDescriptionRequest();
  virtual ~GetEnvDescriptionRequest();

  GetEnvDescriptionRequest(const GetEnvDescriptionRequest& from);
  GetEnvDescriptionRequest(GetEnvDescriptionRequest&& from) noexcept
    : GetEnvDescriptionRequest() {
    *this = ::std::move(from);
  }

  inline GetEnvDescriptionRequest& operator=(const GetEnvDescriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEnvDescriptionRequest& operator=(GetEnvDescriptionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetEnvDescriptionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetEnvDescriptionRequest* internal_default_instance() {
    return reinterpret_cast<const GetEnvDescriptionRequest*>(
               &_GetEnvDescriptionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetEnvDescriptionRequest& a, GetEnvDescriptionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEnvDescriptionRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetEnvDescriptionRequest* New() const final {
    return CreateMaybeMessage<GetEnvDescriptionRequest>(nullptr);
  }

  GetEnvDescriptionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetEnvDescriptionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetEnvDescriptionRequest& from);
  void MergeFrom(const GetEnvDescriptionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEnvDescriptionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.GetEnvDescriptionRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:unetwork.GetEnvDescriptionRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class GetEnvDescriptionResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.GetEnvDescriptionResponse) */ {
 public:
  GetEnvDescriptionResponse();
  virtual ~GetEnvDescriptionResponse();

  GetEnvDescriptionResponse(const GetEnvDescriptionResponse& from);
  GetEnvDescriptionResponse(GetEnvDescriptionResponse&& from) noexcept
    : GetEnvDescriptionResponse() {
    *this = ::std::move(from);
  }

  inline GetEnvDescriptionResponse& operator=(const GetEnvDescriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEnvDescriptionResponse& operator=(GetEnvDescriptionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetEnvDescriptionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetEnvDescriptionResponse* internal_default_instance() {
    return reinterpret_cast<const GetEnvDescriptionResponse*>(
               &_GetEnvDescriptionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetEnvDescriptionResponse& a, GetEnvDescriptionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEnvDescriptionResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetEnvDescriptionResponse* New() const final {
    return CreateMaybeMessage<GetEnvDescriptionResponse>(nullptr);
  }

  GetEnvDescriptionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetEnvDescriptionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetEnvDescriptionResponse& from);
  void MergeFrom(const GetEnvDescriptionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEnvDescriptionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.GetEnvDescriptionResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionSpaceDimensionFieldNumber = 1,
    kObservationSpaceDimensionFieldNumber = 2,
    kIsDiscreteFieldNumber = 3,
  };
  // int32 action_space_dimension = 1;
  void clear_action_space_dimension();
  ::PROTOBUF_NAMESPACE_ID::int32 action_space_dimension() const;
  void set_action_space_dimension(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 observation_space_dimension = 2;
  void clear_observation_space_dimension();
  ::PROTOBUF_NAMESPACE_ID::int32 observation_space_dimension() const;
  void set_observation_space_dimension(::PROTOBUF_NAMESPACE_ID::int32 value);

  // bool is_discrete = 3;
  void clear_is_discrete();
  bool is_discrete() const;
  void set_is_discrete(bool value);

  // @@protoc_insertion_point(class_scope:unetwork.GetEnvDescriptionResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 action_space_dimension_;
  ::PROTOBUF_NAMESPACE_ID::int32 observation_space_dimension_;
  bool is_discrete_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class SetCurrentTaskRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.SetCurrentTaskRequest) */ {
 public:
  SetCurrentTaskRequest();
  virtual ~SetCurrentTaskRequest();

  SetCurrentTaskRequest(const SetCurrentTaskRequest& from);
  SetCurrentTaskRequest(SetCurrentTaskRequest&& from) noexcept
    : SetCurrentTaskRequest() {
    *this = ::std::move(from);
  }

  inline SetCurrentTaskRequest& operator=(const SetCurrentTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCurrentTaskRequest& operator=(SetCurrentTaskRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetCurrentTaskRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetCurrentTaskRequest* internal_default_instance() {
    return reinterpret_cast<const SetCurrentTaskRequest*>(
               &_SetCurrentTaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SetCurrentTaskRequest& a, SetCurrentTaskRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCurrentTaskRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetCurrentTaskRequest* New() const final {
    return CreateMaybeMessage<SetCurrentTaskRequest>(nullptr);
  }

  SetCurrentTaskRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetCurrentTaskRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetCurrentTaskRequest& from);
  void MergeFrom(const SetCurrentTaskRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCurrentTaskRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.SetCurrentTaskRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaskFieldNumber = 1,
  };
  // .unetwork.SystemTask task = 1;
  void clear_task();
  ::unetwork::SystemTask task() const;
  void set_task(::unetwork::SystemTask value);

  // @@protoc_insertion_point(class_scope:unetwork.SetCurrentTaskRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int task_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class SetCurrentTaskResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.SetCurrentTaskResponse) */ {
 public:
  SetCurrentTaskResponse();
  virtual ~SetCurrentTaskResponse();

  SetCurrentTaskResponse(const SetCurrentTaskResponse& from);
  SetCurrentTaskResponse(SetCurrentTaskResponse&& from) noexcept
    : SetCurrentTaskResponse() {
    *this = ::std::move(from);
  }

  inline SetCurrentTaskResponse& operator=(const SetCurrentTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetCurrentTaskResponse& operator=(SetCurrentTaskResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SetCurrentTaskResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetCurrentTaskResponse* internal_default_instance() {
    return reinterpret_cast<const SetCurrentTaskResponse*>(
               &_SetCurrentTaskResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SetCurrentTaskResponse& a, SetCurrentTaskResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetCurrentTaskResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SetCurrentTaskResponse* New() const final {
    return CreateMaybeMessage<SetCurrentTaskResponse>(nullptr);
  }

  SetCurrentTaskResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SetCurrentTaskResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SetCurrentTaskResponse& from);
  void MergeFrom(const SetCurrentTaskResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetCurrentTaskResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.SetCurrentTaskResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:unetwork.SetCurrentTaskResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class GetOptimizationParamsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.GetOptimizationParamsRequest) */ {
 public:
  GetOptimizationParamsRequest();
  virtual ~GetOptimizationParamsRequest();

  GetOptimizationParamsRequest(const GetOptimizationParamsRequest& from);
  GetOptimizationParamsRequest(GetOptimizationParamsRequest&& from) noexcept
    : GetOptimizationParamsRequest() {
    *this = ::std::move(from);
  }

  inline GetOptimizationParamsRequest& operator=(const GetOptimizationParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOptimizationParamsRequest& operator=(GetOptimizationParamsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetOptimizationParamsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetOptimizationParamsRequest* internal_default_instance() {
    return reinterpret_cast<const GetOptimizationParamsRequest*>(
               &_GetOptimizationParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetOptimizationParamsRequest& a, GetOptimizationParamsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOptimizationParamsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetOptimizationParamsRequest* New() const final {
    return CreateMaybeMessage<GetOptimizationParamsRequest>(nullptr);
  }

  GetOptimizationParamsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetOptimizationParamsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetOptimizationParamsRequest& from);
  void MergeFrom(const GetOptimizationParamsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOptimizationParamsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.GetOptimizationParamsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:unetwork.GetOptimizationParamsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class GetOptimizationParamsResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.GetOptimizationParamsResponse) */ {
 public:
  GetOptimizationParamsResponse();
  virtual ~GetOptimizationParamsResponse();

  GetOptimizationParamsResponse(const GetOptimizationParamsResponse& from);
  GetOptimizationParamsResponse(GetOptimizationParamsResponse&& from) noexcept
    : GetOptimizationParamsResponse() {
    *this = ::std::move(from);
  }

  inline GetOptimizationParamsResponse& operator=(const GetOptimizationParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOptimizationParamsResponse& operator=(GetOptimizationParamsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetOptimizationParamsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetOptimizationParamsResponse* internal_default_instance() {
    return reinterpret_cast<const GetOptimizationParamsResponse*>(
               &_GetOptimizationParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetOptimizationParamsResponse& a, GetOptimizationParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOptimizationParamsResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetOptimizationParamsResponse* New() const final {
    return CreateMaybeMessage<GetOptimizationParamsResponse>(nullptr);
  }

  GetOptimizationParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetOptimizationParamsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetOptimizationParamsResponse& from);
  void MergeFrom(const GetOptimizationParamsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOptimizationParamsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.GetOptimizationParamsResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptimizationParamsFieldNumber = 1,
  };
  // repeated .unetwork.OptimizationParameter optimization_params = 1;
  int optimization_params_size() const;
  void clear_optimization_params();
  ::unetwork::OptimizationParameter* mutable_optimization_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::unetwork::OptimizationParameter >*
      mutable_optimization_params();
  const ::unetwork::OptimizationParameter& optimization_params(int index) const;
  ::unetwork::OptimizationParameter* add_optimization_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::unetwork::OptimizationParameter >&
      optimization_params() const;

  // @@protoc_insertion_point(class_scope:unetwork.GetOptimizationParamsResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::unetwork::OptimizationParameter > optimization_params_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class ResetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.ResetRequest) */ {
 public:
  ResetRequest();
  virtual ~ResetRequest();

  ResetRequest(const ResetRequest& from);
  ResetRequest(ResetRequest&& from) noexcept
    : ResetRequest() {
    *this = ::std::move(from);
  }

  inline ResetRequest& operator=(const ResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetRequest& operator=(ResetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetRequest* internal_default_instance() {
    return reinterpret_cast<const ResetRequest*>(
               &_ResetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ResetRequest& a, ResetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResetRequest* New() const final {
    return CreateMaybeMessage<ResetRequest>(nullptr);
  }

  ResetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResetRequest& from);
  void MergeFrom(const ResetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.ResetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:unetwork.ResetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class ResetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.ResetResponse) */ {
 public:
  ResetResponse();
  virtual ~ResetResponse();

  ResetResponse(const ResetResponse& from);
  ResetResponse(ResetResponse&& from) noexcept
    : ResetResponse() {
    *this = ::std::move(from);
  }

  inline ResetResponse& operator=(const ResetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetResponse& operator=(ResetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetResponse* internal_default_instance() {
    return reinterpret_cast<const ResetResponse*>(
               &_ResetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ResetResponse& a, ResetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResetResponse* New() const final {
    return CreateMaybeMessage<ResetResponse>(nullptr);
  }

  ResetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResetResponse& from);
  void MergeFrom(const ResetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.ResetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ResetResponse_ResetStatus ResetStatus;
  static constexpr ResetStatus READY_TO_SIMULATE =
    ResetResponse_ResetStatus_READY_TO_SIMULATE;
  static constexpr ResetStatus RESET_FAILED =
    ResetResponse_ResetStatus_RESET_FAILED;
  static inline bool ResetStatus_IsValid(int value) {
    return ResetResponse_ResetStatus_IsValid(value);
  }
  static constexpr ResetStatus ResetStatus_MIN =
    ResetResponse_ResetStatus_ResetStatus_MIN;
  static constexpr ResetStatus ResetStatus_MAX =
    ResetResponse_ResetStatus_ResetStatus_MAX;
  static constexpr int ResetStatus_ARRAYSIZE =
    ResetResponse_ResetStatus_ResetStatus_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ResetStatus_descriptor() {
    return ResetResponse_ResetStatus_descriptor();
  }
  template<typename T>
  static inline const std::string& ResetStatus_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ResetStatus>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ResetStatus_Name.");
    return ResetResponse_ResetStatus_Name(enum_t_value);
  }
  static inline bool ResetStatus_Parse(const std::string& name,
      ResetStatus* value) {
    return ResetResponse_ResetStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResetInfoFieldNumber = 3,
    kObservationFieldNumber = 2,
    kResetStatusFieldNumber = 1,
  };
  // string reset_info = 3;
  void clear_reset_info();
  const std::string& reset_info() const;
  void set_reset_info(const std::string& value);
  void set_reset_info(std::string&& value);
  void set_reset_info(const char* value);
  void set_reset_info(const char* value, size_t size);
  std::string* mutable_reset_info();
  std::string* release_reset_info();
  void set_allocated_reset_info(std::string* reset_info);

  // .unetwork.Observation observation = 2;
  bool has_observation() const;
  void clear_observation();
  const ::unetwork::Observation& observation() const;
  ::unetwork::Observation* release_observation();
  ::unetwork::Observation* mutable_observation();
  void set_allocated_observation(::unetwork::Observation* observation);

  // .unetwork.ResetResponse.ResetStatus reset_status = 1;
  void clear_reset_status();
  ::unetwork::ResetResponse_ResetStatus reset_status() const;
  void set_reset_status(::unetwork::ResetResponse_ResetStatus value);

  // @@protoc_insertion_point(class_scope:unetwork.ResetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reset_info_;
  ::unetwork::Observation* observation_;
  int reset_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class StepRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.StepRequest) */ {
 public:
  StepRequest();
  virtual ~StepRequest();

  StepRequest(const StepRequest& from);
  StepRequest(StepRequest&& from) noexcept
    : StepRequest() {
    *this = ::std::move(from);
  }

  inline StepRequest& operator=(const StepRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepRequest& operator=(StepRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StepRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepRequest* internal_default_instance() {
    return reinterpret_cast<const StepRequest*>(
               &_StepRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(StepRequest& a, StepRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StepRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StepRequest* New() const final {
    return CreateMaybeMessage<StepRequest>(nullptr);
  }

  StepRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StepRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StepRequest& from);
  void MergeFrom(const StepRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.StepRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 1,
  };
  // .unetwork.Action action = 1;
  bool has_action() const;
  void clear_action();
  const ::unetwork::Action& action() const;
  ::unetwork::Action* release_action();
  ::unetwork::Action* mutable_action();
  void set_allocated_action(::unetwork::Action* action);

  // @@protoc_insertion_point(class_scope:unetwork.StepRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::unetwork::Action* action_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class StepResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.StepResponse) */ {
 public:
  StepResponse();
  virtual ~StepResponse();

  StepResponse(const StepResponse& from);
  StepResponse(StepResponse&& from) noexcept
    : StepResponse() {
    *this = ::std::move(from);
  }

  inline StepResponse& operator=(const StepResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepResponse& operator=(StepResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StepResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StepResponse* internal_default_instance() {
    return reinterpret_cast<const StepResponse*>(
               &_StepResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(StepResponse& a, StepResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StepResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StepResponse* New() const final {
    return CreateMaybeMessage<StepResponse>(nullptr);
  }

  StepResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StepResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StepResponse& from);
  void MergeFrom(const StepResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StepResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.StepResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 4,
    kObservationFieldNumber = 1,
    kRewardFieldNumber = 2,
    kDoneFieldNumber = 3,
  };
  // string info = 4;
  void clear_info();
  const std::string& info() const;
  void set_info(const std::string& value);
  void set_info(std::string&& value);
  void set_info(const char* value);
  void set_info(const char* value, size_t size);
  std::string* mutable_info();
  std::string* release_info();
  void set_allocated_info(std::string* info);

  // .unetwork.Observation observation = 1;
  bool has_observation() const;
  void clear_observation();
  const ::unetwork::Observation& observation() const;
  ::unetwork::Observation* release_observation();
  ::unetwork::Observation* mutable_observation();
  void set_allocated_observation(::unetwork::Observation* observation);

  // float reward = 2;
  void clear_reward();
  float reward() const;
  void set_reward(float value);

  // bool done = 3;
  void clear_done();
  bool done() const;
  void set_done(bool value);

  // @@protoc_insertion_point(class_scope:unetwork.StepResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr info_;
  ::unetwork::Observation* observation_;
  float reward_;
  bool done_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class StopRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.StopRequest) */ {
 public:
  StopRequest();
  virtual ~StopRequest();

  StopRequest(const StopRequest& from);
  StopRequest(StopRequest&& from) noexcept
    : StopRequest() {
    *this = ::std::move(from);
  }

  inline StopRequest& operator=(const StopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopRequest& operator=(StopRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StopRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopRequest* internal_default_instance() {
    return reinterpret_cast<const StopRequest*>(
               &_StopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(StopRequest& a, StopRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StopRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StopRequest* New() const final {
    return CreateMaybeMessage<StopRequest>(nullptr);
  }

  StopRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StopRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StopRequest& from);
  void MergeFrom(const StopRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.StopRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:unetwork.StopRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// -------------------------------------------------------------------

class StopResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:unetwork.StopResponse) */ {
 public:
  StopResponse();
  virtual ~StopResponse();

  StopResponse(const StopResponse& from);
  StopResponse(StopResponse&& from) noexcept
    : StopResponse() {
    *this = ::std::move(from);
  }

  inline StopResponse& operator=(const StopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopResponse& operator=(StopResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StopResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopResponse* internal_default_instance() {
    return reinterpret_cast<const StopResponse*>(
               &_StopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(StopResponse& a, StopResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StopResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StopResponse* New() const final {
    return CreateMaybeMessage<StopResponse>(nullptr);
  }

  StopResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StopResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StopResponse& from);
  void MergeFrom(const StopResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "unetwork.StopResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto);
    return ::descriptor_table_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:unetwork.StopResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoadDataRequest

// string data_path = 1;
inline void LoadDataRequest::clear_data_path() {
  data_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LoadDataRequest::data_path() const {
  // @@protoc_insertion_point(field_get:unetwork.LoadDataRequest.data_path)
  return data_path_.GetNoArena();
}
inline void LoadDataRequest::set_data_path(const std::string& value) {
  
  data_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:unetwork.LoadDataRequest.data_path)
}
inline void LoadDataRequest::set_data_path(std::string&& value) {
  
  data_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:unetwork.LoadDataRequest.data_path)
}
inline void LoadDataRequest::set_data_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:unetwork.LoadDataRequest.data_path)
}
inline void LoadDataRequest::set_data_path(const char* value, size_t size) {
  
  data_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:unetwork.LoadDataRequest.data_path)
}
inline std::string* LoadDataRequest::mutable_data_path() {
  
  // @@protoc_insertion_point(field_mutable:unetwork.LoadDataRequest.data_path)
  return data_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LoadDataRequest::release_data_path() {
  // @@protoc_insertion_point(field_release:unetwork.LoadDataRequest.data_path)
  
  return data_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LoadDataRequest::set_allocated_data_path(std::string* data_path) {
  if (data_path != nullptr) {
    
  } else {
    
  }
  data_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data_path);
  // @@protoc_insertion_point(field_set_allocated:unetwork.LoadDataRequest.data_path)
}

// -------------------------------------------------------------------

// LoadDataResponse

// .unetwork.LoadDataResponse.LoadDataStatus status = 1;
inline void LoadDataResponse::clear_status() {
  status_ = 0;
}
inline ::unetwork::LoadDataResponse_LoadDataStatus LoadDataResponse::status() const {
  // @@protoc_insertion_point(field_get:unetwork.LoadDataResponse.status)
  return static_cast< ::unetwork::LoadDataResponse_LoadDataStatus >(status_);
}
inline void LoadDataResponse::set_status(::unetwork::LoadDataResponse_LoadDataStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:unetwork.LoadDataResponse.status)
}

// string message = 2;
inline void LoadDataResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LoadDataResponse::message() const {
  // @@protoc_insertion_point(field_get:unetwork.LoadDataResponse.message)
  return message_.GetNoArena();
}
inline void LoadDataResponse::set_message(const std::string& value) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:unetwork.LoadDataResponse.message)
}
inline void LoadDataResponse::set_message(std::string&& value) {
  
  message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:unetwork.LoadDataResponse.message)
}
inline void LoadDataResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:unetwork.LoadDataResponse.message)
}
inline void LoadDataResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:unetwork.LoadDataResponse.message)
}
inline std::string* LoadDataResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:unetwork.LoadDataResponse.message)
  return message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LoadDataResponse::release_message() {
  // @@protoc_insertion_point(field_release:unetwork.LoadDataResponse.message)
  
  return message_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LoadDataResponse::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:unetwork.LoadDataResponse.message)
}

// -------------------------------------------------------------------

// GetEnvDescriptionRequest

// -------------------------------------------------------------------

// GetEnvDescriptionResponse

// int32 action_space_dimension = 1;
inline void GetEnvDescriptionResponse::clear_action_space_dimension() {
  action_space_dimension_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetEnvDescriptionResponse::action_space_dimension() const {
  // @@protoc_insertion_point(field_get:unetwork.GetEnvDescriptionResponse.action_space_dimension)
  return action_space_dimension_;
}
inline void GetEnvDescriptionResponse::set_action_space_dimension(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  action_space_dimension_ = value;
  // @@protoc_insertion_point(field_set:unetwork.GetEnvDescriptionResponse.action_space_dimension)
}

// int32 observation_space_dimension = 2;
inline void GetEnvDescriptionResponse::clear_observation_space_dimension() {
  observation_space_dimension_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetEnvDescriptionResponse::observation_space_dimension() const {
  // @@protoc_insertion_point(field_get:unetwork.GetEnvDescriptionResponse.observation_space_dimension)
  return observation_space_dimension_;
}
inline void GetEnvDescriptionResponse::set_observation_space_dimension(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  observation_space_dimension_ = value;
  // @@protoc_insertion_point(field_set:unetwork.GetEnvDescriptionResponse.observation_space_dimension)
}

// bool is_discrete = 3;
inline void GetEnvDescriptionResponse::clear_is_discrete() {
  is_discrete_ = false;
}
inline bool GetEnvDescriptionResponse::is_discrete() const {
  // @@protoc_insertion_point(field_get:unetwork.GetEnvDescriptionResponse.is_discrete)
  return is_discrete_;
}
inline void GetEnvDescriptionResponse::set_is_discrete(bool value) {
  
  is_discrete_ = value;
  // @@protoc_insertion_point(field_set:unetwork.GetEnvDescriptionResponse.is_discrete)
}

// -------------------------------------------------------------------

// SetCurrentTaskRequest

// .unetwork.SystemTask task = 1;
inline void SetCurrentTaskRequest::clear_task() {
  task_ = 0;
}
inline ::unetwork::SystemTask SetCurrentTaskRequest::task() const {
  // @@protoc_insertion_point(field_get:unetwork.SetCurrentTaskRequest.task)
  return static_cast< ::unetwork::SystemTask >(task_);
}
inline void SetCurrentTaskRequest::set_task(::unetwork::SystemTask value) {
  
  task_ = value;
  // @@protoc_insertion_point(field_set:unetwork.SetCurrentTaskRequest.task)
}

// -------------------------------------------------------------------

// SetCurrentTaskResponse

// -------------------------------------------------------------------

// GetOptimizationParamsRequest

// -------------------------------------------------------------------

// GetOptimizationParamsResponse

// repeated .unetwork.OptimizationParameter optimization_params = 1;
inline int GetOptimizationParamsResponse::optimization_params_size() const {
  return optimization_params_.size();
}
inline ::unetwork::OptimizationParameter* GetOptimizationParamsResponse::mutable_optimization_params(int index) {
  // @@protoc_insertion_point(field_mutable:unetwork.GetOptimizationParamsResponse.optimization_params)
  return optimization_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::unetwork::OptimizationParameter >*
GetOptimizationParamsResponse::mutable_optimization_params() {
  // @@protoc_insertion_point(field_mutable_list:unetwork.GetOptimizationParamsResponse.optimization_params)
  return &optimization_params_;
}
inline const ::unetwork::OptimizationParameter& GetOptimizationParamsResponse::optimization_params(int index) const {
  // @@protoc_insertion_point(field_get:unetwork.GetOptimizationParamsResponse.optimization_params)
  return optimization_params_.Get(index);
}
inline ::unetwork::OptimizationParameter* GetOptimizationParamsResponse::add_optimization_params() {
  // @@protoc_insertion_point(field_add:unetwork.GetOptimizationParamsResponse.optimization_params)
  return optimization_params_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::unetwork::OptimizationParameter >&
GetOptimizationParamsResponse::optimization_params() const {
  // @@protoc_insertion_point(field_list:unetwork.GetOptimizationParamsResponse.optimization_params)
  return optimization_params_;
}

// -------------------------------------------------------------------

// ResetRequest

// -------------------------------------------------------------------

// ResetResponse

// .unetwork.ResetResponse.ResetStatus reset_status = 1;
inline void ResetResponse::clear_reset_status() {
  reset_status_ = 0;
}
inline ::unetwork::ResetResponse_ResetStatus ResetResponse::reset_status() const {
  // @@protoc_insertion_point(field_get:unetwork.ResetResponse.reset_status)
  return static_cast< ::unetwork::ResetResponse_ResetStatus >(reset_status_);
}
inline void ResetResponse::set_reset_status(::unetwork::ResetResponse_ResetStatus value) {
  
  reset_status_ = value;
  // @@protoc_insertion_point(field_set:unetwork.ResetResponse.reset_status)
}

// .unetwork.Observation observation = 2;
inline bool ResetResponse::has_observation() const {
  return this != internal_default_instance() && observation_ != nullptr;
}
inline const ::unetwork::Observation& ResetResponse::observation() const {
  const ::unetwork::Observation* p = observation_;
  // @@protoc_insertion_point(field_get:unetwork.ResetResponse.observation)
  return p != nullptr ? *p : *reinterpret_cast<const ::unetwork::Observation*>(
      &::unetwork::_Observation_default_instance_);
}
inline ::unetwork::Observation* ResetResponse::release_observation() {
  // @@protoc_insertion_point(field_release:unetwork.ResetResponse.observation)
  
  ::unetwork::Observation* temp = observation_;
  observation_ = nullptr;
  return temp;
}
inline ::unetwork::Observation* ResetResponse::mutable_observation() {
  
  if (observation_ == nullptr) {
    auto* p = CreateMaybeMessage<::unetwork::Observation>(GetArenaNoVirtual());
    observation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:unetwork.ResetResponse.observation)
  return observation_;
}
inline void ResetResponse::set_allocated_observation(::unetwork::Observation* observation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(observation_);
  }
  if (observation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      observation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, observation, submessage_arena);
    }
    
  } else {
    
  }
  observation_ = observation;
  // @@protoc_insertion_point(field_set_allocated:unetwork.ResetResponse.observation)
}

// string reset_info = 3;
inline void ResetResponse::clear_reset_info() {
  reset_info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ResetResponse::reset_info() const {
  // @@protoc_insertion_point(field_get:unetwork.ResetResponse.reset_info)
  return reset_info_.GetNoArena();
}
inline void ResetResponse::set_reset_info(const std::string& value) {
  
  reset_info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:unetwork.ResetResponse.reset_info)
}
inline void ResetResponse::set_reset_info(std::string&& value) {
  
  reset_info_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:unetwork.ResetResponse.reset_info)
}
inline void ResetResponse::set_reset_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  reset_info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:unetwork.ResetResponse.reset_info)
}
inline void ResetResponse::set_reset_info(const char* value, size_t size) {
  
  reset_info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:unetwork.ResetResponse.reset_info)
}
inline std::string* ResetResponse::mutable_reset_info() {
  
  // @@protoc_insertion_point(field_mutable:unetwork.ResetResponse.reset_info)
  return reset_info_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ResetResponse::release_reset_info() {
  // @@protoc_insertion_point(field_release:unetwork.ResetResponse.reset_info)
  
  return reset_info_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ResetResponse::set_allocated_reset_info(std::string* reset_info) {
  if (reset_info != nullptr) {
    
  } else {
    
  }
  reset_info_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reset_info);
  // @@protoc_insertion_point(field_set_allocated:unetwork.ResetResponse.reset_info)
}

// -------------------------------------------------------------------

// StepRequest

// .unetwork.Action action = 1;
inline bool StepRequest::has_action() const {
  return this != internal_default_instance() && action_ != nullptr;
}
inline const ::unetwork::Action& StepRequest::action() const {
  const ::unetwork::Action* p = action_;
  // @@protoc_insertion_point(field_get:unetwork.StepRequest.action)
  return p != nullptr ? *p : *reinterpret_cast<const ::unetwork::Action*>(
      &::unetwork::_Action_default_instance_);
}
inline ::unetwork::Action* StepRequest::release_action() {
  // @@protoc_insertion_point(field_release:unetwork.StepRequest.action)
  
  ::unetwork::Action* temp = action_;
  action_ = nullptr;
  return temp;
}
inline ::unetwork::Action* StepRequest::mutable_action() {
  
  if (action_ == nullptr) {
    auto* p = CreateMaybeMessage<::unetwork::Action>(GetArenaNoVirtual());
    action_ = p;
  }
  // @@protoc_insertion_point(field_mutable:unetwork.StepRequest.action)
  return action_;
}
inline void StepRequest::set_allocated_action(::unetwork::Action* action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(action_);
  }
  if (action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    
  } else {
    
  }
  action_ = action;
  // @@protoc_insertion_point(field_set_allocated:unetwork.StepRequest.action)
}

// -------------------------------------------------------------------

// StepResponse

// .unetwork.Observation observation = 1;
inline bool StepResponse::has_observation() const {
  return this != internal_default_instance() && observation_ != nullptr;
}
inline const ::unetwork::Observation& StepResponse::observation() const {
  const ::unetwork::Observation* p = observation_;
  // @@protoc_insertion_point(field_get:unetwork.StepResponse.observation)
  return p != nullptr ? *p : *reinterpret_cast<const ::unetwork::Observation*>(
      &::unetwork::_Observation_default_instance_);
}
inline ::unetwork::Observation* StepResponse::release_observation() {
  // @@protoc_insertion_point(field_release:unetwork.StepResponse.observation)
  
  ::unetwork::Observation* temp = observation_;
  observation_ = nullptr;
  return temp;
}
inline ::unetwork::Observation* StepResponse::mutable_observation() {
  
  if (observation_ == nullptr) {
    auto* p = CreateMaybeMessage<::unetwork::Observation>(GetArenaNoVirtual());
    observation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:unetwork.StepResponse.observation)
  return observation_;
}
inline void StepResponse::set_allocated_observation(::unetwork::Observation* observation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(observation_);
  }
  if (observation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      observation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, observation, submessage_arena);
    }
    
  } else {
    
  }
  observation_ = observation;
  // @@protoc_insertion_point(field_set_allocated:unetwork.StepResponse.observation)
}

// float reward = 2;
inline void StepResponse::clear_reward() {
  reward_ = 0;
}
inline float StepResponse::reward() const {
  // @@protoc_insertion_point(field_get:unetwork.StepResponse.reward)
  return reward_;
}
inline void StepResponse::set_reward(float value) {
  
  reward_ = value;
  // @@protoc_insertion_point(field_set:unetwork.StepResponse.reward)
}

// bool done = 3;
inline void StepResponse::clear_done() {
  done_ = false;
}
inline bool StepResponse::done() const {
  // @@protoc_insertion_point(field_get:unetwork.StepResponse.done)
  return done_;
}
inline void StepResponse::set_done(bool value) {
  
  done_ = value;
  // @@protoc_insertion_point(field_set:unetwork.StepResponse.done)
}

// string info = 4;
inline void StepResponse::clear_info() {
  info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& StepResponse::info() const {
  // @@protoc_insertion_point(field_get:unetwork.StepResponse.info)
  return info_.GetNoArena();
}
inline void StepResponse::set_info(const std::string& value) {
  
  info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:unetwork.StepResponse.info)
}
inline void StepResponse::set_info(std::string&& value) {
  
  info_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:unetwork.StepResponse.info)
}
inline void StepResponse::set_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:unetwork.StepResponse.info)
}
inline void StepResponse::set_info(const char* value, size_t size) {
  
  info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:unetwork.StepResponse.info)
}
inline std::string* StepResponse::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:unetwork.StepResponse.info)
  return info_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StepResponse::release_info() {
  // @@protoc_insertion_point(field_release:unetwork.StepResponse.info)
  
  return info_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StepResponse::set_allocated_info(std::string* info) {
  if (info != nullptr) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:unetwork.StepResponse.info)
}

// -------------------------------------------------------------------

// StopRequest

// -------------------------------------------------------------------

// StopResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace unetwork

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::unetwork::LoadDataResponse_LoadDataStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::unetwork::LoadDataResponse_LoadDataStatus>() {
  return ::unetwork::LoadDataResponse_LoadDataStatus_descriptor();
}
template <> struct is_proto_enum< ::unetwork::ResetResponse_ResetStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::unetwork::ResetResponse_ResetStatus>() {
  return ::unetwork::ResetResponse_ResetStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_unetwork_2fcore_2fenv_5fservice_5ffunctions_2eproto
