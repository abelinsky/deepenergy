#include "pch.h"
#include "pch.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/core/optimization_param.proto

#include "api/core/optimization_param.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_api_2fcore_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContinuousInterval_api_2fcore_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_api_2fcore_2ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DiscreteInterval_api_2fcore_2ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_api_2fcore_2foptimization_5fparam_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OptimizationParameterMetadata_api_2fcore_2foptimization_5fparam_2eproto;
namespace api {
class OptimizationParameterMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OptimizationParameterMetadata> _instance;
  const ::api::DiscreteInterval* discrete_space_;
  const ::api::ContinuousInterval* continuos_space_;
} _OptimizationParameterMetadata_default_instance_;
class OptimizationParameterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OptimizationParameter> _instance;
  float float_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 int_value_;
} _OptimizationParameter_default_instance_;
}  // namespace api
static void InitDefaultsscc_info_OptimizationParameter_api_2fcore_2foptimization_5fparam_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_OptimizationParameter_default_instance_;
    new (ptr) ::api::OptimizationParameter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::OptimizationParameter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OptimizationParameter_api_2fcore_2foptimization_5fparam_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_OptimizationParameter_api_2fcore_2foptimization_5fparam_2eproto}, {
      &scc_info_OptimizationParameterMetadata_api_2fcore_2foptimization_5fparam_2eproto.base,}};

static void InitDefaultsscc_info_OptimizationParameterMetadata_api_2fcore_2foptimization_5fparam_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_OptimizationParameterMetadata_default_instance_;
    new (ptr) ::api::OptimizationParameterMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::OptimizationParameterMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OptimizationParameterMetadata_api_2fcore_2foptimization_5fparam_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_OptimizationParameterMetadata_api_2fcore_2foptimization_5fparam_2eproto}, {
      &scc_info_DiscreteInterval_api_2fcore_2ftypes_2eproto.base,
      &scc_info_ContinuousInterval_api_2fcore_2ftypes_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_api_2fcore_2foptimization_5fparam_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_api_2fcore_2foptimization_5fparam_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_api_2fcore_2foptimization_5fparam_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_api_2fcore_2foptimization_5fparam_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameterMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameterMetadata, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameterMetadata, type_),
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameterMetadata, physical_type_),
  offsetof(::api::OptimizationParameterMetadataDefaultTypeInternal, discrete_space_),
  offsetof(::api::OptimizationParameterMetadataDefaultTypeInternal, continuos_space_),
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameterMetadata, space_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameter, metadata_),
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameter, id_),
  offsetof(::api::OptimizationParameterDefaultTypeInternal, float_value_),
  offsetof(::api::OptimizationParameterDefaultTypeInternal, int_value_),
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameter, info_),
  PROTOBUF_FIELD_OFFSET(::api::OptimizationParameter, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::OptimizationParameterMetadata)},
  { 10, -1, sizeof(::api::OptimizationParameter)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_OptimizationParameterMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::api::_OptimizationParameter_default_instance_),
};

const char descriptor_table_protodef_api_2fcore_2foptimization_5fparam_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!api/core/optimization_param.proto\022\003api"
  "\032\024api/core/types.proto\"\336\001\n\035OptimizationP"
  "arameterMetadata\022 \n\004type\030\001 \001(\0162\022.api.Par"
  "ameterType\022-\n\rphysical_type\030\002 \001(\0162\026.api."
  "PhysicalValueType\022/\n\016discrete_space\030\003 \001("
  "\0132\025.api.DiscreteIntervalH\000\0222\n\017continuos_"
  "space\030\004 \001(\0132\027.api.ContinuousIntervalH\000B\007"
  "\n\005space\"\234\001\n\025OptimizationParameter\0224\n\010met"
  "adata\030\001 \001(\0132\".api.OptimizationParameterM"
  "etadata\022\n\n\002id\030\002 \001(\t\022\025\n\013float_value\030\003 \001(\002"
  "H\000\022\023\n\tint_value\030\004 \001(\003H\000\022\014\n\004info\030\005 \001(\tB\007\n"
  "\005valueb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_api_2fcore_2foptimization_5fparam_2eproto_deps[1] = {
  &::descriptor_table_api_2fcore_2ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_api_2fcore_2foptimization_5fparam_2eproto_sccs[2] = {
  &scc_info_OptimizationParameter_api_2fcore_2foptimization_5fparam_2eproto.base,
  &scc_info_OptimizationParameterMetadata_api_2fcore_2foptimization_5fparam_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_api_2fcore_2foptimization_5fparam_2eproto_once;
static bool descriptor_table_api_2fcore_2foptimization_5fparam_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_api_2fcore_2foptimization_5fparam_2eproto = {
  &descriptor_table_api_2fcore_2foptimization_5fparam_2eproto_initialized, descriptor_table_protodef_api_2fcore_2foptimization_5fparam_2eproto, "api/core/optimization_param.proto", 454,
  &descriptor_table_api_2fcore_2foptimization_5fparam_2eproto_once, descriptor_table_api_2fcore_2foptimization_5fparam_2eproto_sccs, descriptor_table_api_2fcore_2foptimization_5fparam_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_api_2fcore_2foptimization_5fparam_2eproto::offsets,
  file_level_metadata_api_2fcore_2foptimization_5fparam_2eproto, 2, file_level_enum_descriptors_api_2fcore_2foptimization_5fparam_2eproto, file_level_service_descriptors_api_2fcore_2foptimization_5fparam_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_api_2fcore_2foptimization_5fparam_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_api_2fcore_2foptimization_5fparam_2eproto), true);
namespace api {

// ===================================================================

void OptimizationParameterMetadata::InitAsDefaultInstance() {
  ::api::_OptimizationParameterMetadata_default_instance_.discrete_space_ = const_cast< ::api::DiscreteInterval*>(
      ::api::DiscreteInterval::internal_default_instance());
  ::api::_OptimizationParameterMetadata_default_instance_.continuos_space_ = const_cast< ::api::ContinuousInterval*>(
      ::api::ContinuousInterval::internal_default_instance());
}
class OptimizationParameterMetadata::_Internal {
 public:
  static const ::api::DiscreteInterval& discrete_space(const OptimizationParameterMetadata* msg);
  static const ::api::ContinuousInterval& continuos_space(const OptimizationParameterMetadata* msg);
};

const ::api::DiscreteInterval&
OptimizationParameterMetadata::_Internal::discrete_space(const OptimizationParameterMetadata* msg) {
  return *msg->space_.discrete_space_;
}
const ::api::ContinuousInterval&
OptimizationParameterMetadata::_Internal::continuos_space(const OptimizationParameterMetadata* msg) {
  return *msg->space_.continuos_space_;
}
void OptimizationParameterMetadata::set_allocated_discrete_space(::api::DiscreteInterval* discrete_space) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_space();
  if (discrete_space) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      discrete_space = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, discrete_space, submessage_arena);
    }
    set_has_discrete_space();
    space_.discrete_space_ = discrete_space;
  }
  // @@protoc_insertion_point(field_set_allocated:api.OptimizationParameterMetadata.discrete_space)
}
void OptimizationParameterMetadata::clear_discrete_space() {
  if (has_discrete_space()) {
    delete space_.discrete_space_;
    clear_has_space();
  }
}
void OptimizationParameterMetadata::set_allocated_continuos_space(::api::ContinuousInterval* continuos_space) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_space();
  if (continuos_space) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      continuos_space = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, continuos_space, submessage_arena);
    }
    set_has_continuos_space();
    space_.continuos_space_ = continuos_space;
  }
  // @@protoc_insertion_point(field_set_allocated:api.OptimizationParameterMetadata.continuos_space)
}
void OptimizationParameterMetadata::clear_continuos_space() {
  if (has_continuos_space()) {
    delete space_.continuos_space_;
    clear_has_space();
  }
}
OptimizationParameterMetadata::OptimizationParameterMetadata()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.OptimizationParameterMetadata)
}
OptimizationParameterMetadata::OptimizationParameterMetadata(const OptimizationParameterMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&physical_type_) -
    reinterpret_cast<char*>(&type_)) + sizeof(physical_type_));
  clear_has_space();
  switch (from.space_case()) {
    case kDiscreteSpace: {
      mutable_discrete_space()->::api::DiscreteInterval::MergeFrom(from.discrete_space());
      break;
    }
    case kContinuosSpace: {
      mutable_continuos_space()->::api::ContinuousInterval::MergeFrom(from.continuos_space());
      break;
    }
    case SPACE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:api.OptimizationParameterMetadata)
}

void OptimizationParameterMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OptimizationParameterMetadata_api_2fcore_2foptimization_5fparam_2eproto.base);
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&physical_type_) -
      reinterpret_cast<char*>(&type_)) + sizeof(physical_type_));
  clear_has_space();
}

OptimizationParameterMetadata::~OptimizationParameterMetadata() {
  // @@protoc_insertion_point(destructor:api.OptimizationParameterMetadata)
  SharedDtor();
}

void OptimizationParameterMetadata::SharedDtor() {
  if (has_space()) {
    clear_space();
  }
}

void OptimizationParameterMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OptimizationParameterMetadata& OptimizationParameterMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OptimizationParameterMetadata_api_2fcore_2foptimization_5fparam_2eproto.base);
  return *internal_default_instance();
}


void OptimizationParameterMetadata::clear_space() {
// @@protoc_insertion_point(one_of_clear_start:api.OptimizationParameterMetadata)
  switch (space_case()) {
    case kDiscreteSpace: {
      delete space_.discrete_space_;
      break;
    }
    case kContinuosSpace: {
      delete space_.continuos_space_;
      break;
    }
    case SPACE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SPACE_NOT_SET;
}


void OptimizationParameterMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:api.OptimizationParameterMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&physical_type_) -
      reinterpret_cast<char*>(&type_)) + sizeof(physical_type_));
  clear_space();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OptimizationParameterMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .api.ParameterType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_type(static_cast<::api::ParameterType>(val));
        } else goto handle_unusual;
        continue;
      // .api.PhysicalValueType physical_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_physical_type(static_cast<::api::PhysicalValueType>(val));
        } else goto handle_unusual;
        continue;
      // .api.DiscreteInterval discrete_space = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_discrete_space(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .api.ContinuousInterval continuos_space = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_continuos_space(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OptimizationParameterMetadata::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.OptimizationParameterMetadata)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.ParameterType type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::api::ParameterType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.PhysicalValueType physical_type = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_physical_type(static_cast< ::api::PhysicalValueType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.DiscreteInterval discrete_space = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_discrete_space()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.ContinuousInterval continuos_space = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_continuos_space()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.OptimizationParameterMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.OptimizationParameterMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OptimizationParameterMetadata::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.OptimizationParameterMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.ParameterType type = 1;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .api.PhysicalValueType physical_type = 2;
  if (this->physical_type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->physical_type(), output);
  }

  // .api.DiscreteInterval discrete_space = 3;
  if (has_discrete_space()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, _Internal::discrete_space(this), output);
  }

  // .api.ContinuousInterval continuos_space = 4;
  if (has_continuos_space()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, _Internal::continuos_space(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:api.OptimizationParameterMetadata)
}

::PROTOBUF_NAMESPACE_ID::uint8* OptimizationParameterMetadata::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.OptimizationParameterMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.ParameterType type = 1;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .api.PhysicalValueType physical_type = 2;
  if (this->physical_type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->physical_type(), target);
  }

  // .api.DiscreteInterval discrete_space = 3;
  if (has_discrete_space()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::discrete_space(this), target);
  }

  // .api.ContinuousInterval continuos_space = 4;
  if (has_continuos_space()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::continuos_space(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.OptimizationParameterMetadata)
  return target;
}

size_t OptimizationParameterMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.OptimizationParameterMetadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .api.ParameterType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
  }

  // .api.PhysicalValueType physical_type = 2;
  if (this->physical_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->physical_type());
  }

  switch (space_case()) {
    // .api.DiscreteInterval discrete_space = 3;
    case kDiscreteSpace: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *space_.discrete_space_);
      break;
    }
    // .api.ContinuousInterval continuos_space = 4;
    case kContinuosSpace: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *space_.continuos_space_);
      break;
    }
    case SPACE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptimizationParameterMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.OptimizationParameterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizationParameterMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OptimizationParameterMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.OptimizationParameterMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.OptimizationParameterMetadata)
    MergeFrom(*source);
  }
}

void OptimizationParameterMetadata::MergeFrom(const OptimizationParameterMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.OptimizationParameterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.physical_type() != 0) {
    set_physical_type(from.physical_type());
  }
  switch (from.space_case()) {
    case kDiscreteSpace: {
      mutable_discrete_space()->::api::DiscreteInterval::MergeFrom(from.discrete_space());
      break;
    }
    case kContinuosSpace: {
      mutable_continuos_space()->::api::ContinuousInterval::MergeFrom(from.continuos_space());
      break;
    }
    case SPACE_NOT_SET: {
      break;
    }
  }
}

void OptimizationParameterMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.OptimizationParameterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizationParameterMetadata::CopyFrom(const OptimizationParameterMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.OptimizationParameterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizationParameterMetadata::IsInitialized() const {
  return true;
}

void OptimizationParameterMetadata::InternalSwap(OptimizationParameterMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(physical_type_, other->physical_type_);
  swap(space_, other->space_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OptimizationParameterMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OptimizationParameter::InitAsDefaultInstance() {
  ::api::_OptimizationParameter_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::api::OptimizationParameterMetadata*>(
      ::api::OptimizationParameterMetadata::internal_default_instance());
  ::api::_OptimizationParameter_default_instance_.float_value_ = 0;
  ::api::_OptimizationParameter_default_instance_.int_value_ = PROTOBUF_LONGLONG(0);
}
class OptimizationParameter::_Internal {
 public:
  static const ::api::OptimizationParameterMetadata& metadata(const OptimizationParameter* msg);
};

const ::api::OptimizationParameterMetadata&
OptimizationParameter::_Internal::metadata(const OptimizationParameter* msg) {
  return *msg->metadata_;
}
OptimizationParameter::OptimizationParameter()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.OptimizationParameter)
}
OptimizationParameter::OptimizationParameter(const OptimizationParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.id().empty()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.info().empty()) {
    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::api::OptimizationParameterMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  clear_has_value();
  switch (from.value_case()) {
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:api.OptimizationParameter)
}

void OptimizationParameter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OptimizationParameter_api_2fcore_2foptimization_5fparam_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metadata_ = nullptr;
  clear_has_value();
}

OptimizationParameter::~OptimizationParameter() {
  // @@protoc_insertion_point(destructor:api.OptimizationParameter)
  SharedDtor();
}

void OptimizationParameter::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
  if (has_value()) {
    clear_value();
  }
}

void OptimizationParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OptimizationParameter& OptimizationParameter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OptimizationParameter_api_2fcore_2foptimization_5fparam_2eproto.base);
  return *internal_default_instance();
}


void OptimizationParameter::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:api.OptimizationParameter)
  switch (value_case()) {
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void OptimizationParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:api.OptimizationParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  clear_value();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OptimizationParameter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .api.OptimizationParameterMetadata metadata = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_id(), ptr, ctx, "api.OptimizationParameter.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float float_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          set_float_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int64 int_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          set_int_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string info = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_info(), ptr, ctx, "api.OptimizationParameter.info");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OptimizationParameter::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.OptimizationParameter)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.OptimizationParameterMetadata metadata = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "api.OptimizationParameter.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_value = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (29 & 0xFF)) {
          clear_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.float_value_)));
          set_has_float_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int_value = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          clear_value();
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "api.OptimizationParameter.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.OptimizationParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.OptimizationParameter)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OptimizationParameter::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.OptimizationParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.OptimizationParameterMetadata metadata = 1;
  if (this->has_metadata()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, _Internal::metadata(this), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.OptimizationParameter.id");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // float float_value = 3;
  if (has_float_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(3, this->float_value(), output);
  }

  // int64 int_value = 4;
  if (has_int_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(4, this->int_value(), output);
  }

  // string info = 5;
  if (this->info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.OptimizationParameter.info");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:api.OptimizationParameter)
}

::PROTOBUF_NAMESPACE_ID::uint8* OptimizationParameter::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:api.OptimizationParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.OptimizationParameterMetadata metadata = 1;
  if (this->has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::metadata(this), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.OptimizationParameter.id");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // float float_value = 3;
  if (has_float_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->float_value(), target);
  }

  // int64 int_value = 4;
  if (has_int_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->int_value(), target);
  }

  // string info = 5;
  if (this->info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "api.OptimizationParameter.info");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        5, this->info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.OptimizationParameter)
  return target;
}

size_t OptimizationParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.OptimizationParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string info = 5;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->info());
  }

  // .api.OptimizationParameterMetadata metadata = 1;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  switch (value_case()) {
    // float float_value = 3;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // int64 int_value = 4;
    case kIntValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->int_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptimizationParameter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.OptimizationParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizationParameter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OptimizationParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.OptimizationParameter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.OptimizationParameter)
    MergeFrom(*source);
  }
}

void OptimizationParameter::MergeFrom(const OptimizationParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.OptimizationParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::api::OptimizationParameterMetadata::MergeFrom(from.metadata());
  }
  switch (from.value_case()) {
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void OptimizationParameter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.OptimizationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizationParameter::CopyFrom(const OptimizationParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.OptimizationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizationParameter::IsInitialized() const {
  return true;
}

void OptimizationParameter::InternalSwap(OptimizationParameter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  info_.Swap(&other->info_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metadata_, other->metadata_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OptimizationParameter::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::api::OptimizationParameterMetadata* Arena::CreateMaybeMessage< ::api::OptimizationParameterMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::api::OptimizationParameterMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::api::OptimizationParameter* Arena::CreateMaybeMessage< ::api::OptimizationParameter >(Arena* arena) {
  return Arena::CreateInternal< ::api::OptimizationParameter >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
