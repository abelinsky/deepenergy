# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from energyplatform.core import env_service_functions_pb2 as energyplatform_dot_core_dot_env__service__functions__pb2


class EnvServiceStub(object):
  """//////////////////////////////////////////////////////////////////////////////

  Env defines a service that executes different operations on an Environment (see class definition).

  //////////////////////////////////////////////////////////////////////////////

  Main class for all environments of the platform (gas system, energy system, industry infrastructure system, etc).
  Encapsulates the environment with arbitrary behind-the-scenes dynamics, which is governed by concrete virtual simulator.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.LoadData = channel.unary_unary(
        '/energyplatform.EnvService/LoadData',
        request_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.LoadDataRequest.SerializeToString,
        response_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.LoadDataResponse.FromString,
        )
    self.GetEnvDescription = channel.unary_unary(
        '/energyplatform.EnvService/GetEnvDescription',
        request_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.GetEnvDescriptionRequest.SerializeToString,
        response_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.GetEnvDescriptionResponse.FromString,
        )
    self.SetCurrentTask = channel.unary_unary(
        '/energyplatform.EnvService/SetCurrentTask',
        request_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.SetCurrentTaskRequest.SerializeToString,
        response_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.SetCurrentTaskResponse.FromString,
        )
    self.GetOptimizationParams = channel.unary_unary(
        '/energyplatform.EnvService/GetOptimizationParams',
        request_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.GetOptimizationParamsRequest.SerializeToString,
        response_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.GetOptimizationParamsResponse.FromString,
        )
    self.Reset = channel.unary_unary(
        '/energyplatform.EnvService/Reset',
        request_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.ResetRequest.SerializeToString,
        response_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.ResetResponse.FromString,
        )
    self.Step = channel.unary_unary(
        '/energyplatform.EnvService/Step',
        request_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.StepRequest.SerializeToString,
        response_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.StepResponse.FromString,
        )
    self.Stop = channel.unary_unary(
        '/energyplatform.EnvService/Stop',
        request_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.StopRequest.SerializeToString,
        response_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.StopResponse.FromString,
        )


class EnvServiceServicer(object):
  """//////////////////////////////////////////////////////////////////////////////

  Env defines a service that executes different operations on an Environment (see class definition).

  //////////////////////////////////////////////////////////////////////////////

  Main class for all environments of the platform (gas system, energy system, industry infrastructure system, etc).
  Encapsulates the environment with arbitrary behind-the-scenes dynamics, which is governed by concrete virtual simulator.
  """

  def LoadData(self, request, context):
    """Loads data.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetEnvDescription(self, request, context):
    """Loads data and returns environment description. Data location must be already set.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetCurrentTask(self, request, context):
    """Sets current task 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOptimizationParams(self, request, context):
    """Returns the list of control parameters (possible agent's actions)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset(self, request, context):
    """Resets the state of the environment (the simulator state) and returns an initial observation.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Step(self, request, context):
    """Performs one timestep of the environment's dynamics. When end of the episode is reached, you have to call Reset().
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Stop(self, request, context):
    """Stops simulations.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EnvServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'LoadData': grpc.unary_unary_rpc_method_handler(
          servicer.LoadData,
          request_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.LoadDataRequest.FromString,
          response_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.LoadDataResponse.SerializeToString,
      ),
      'GetEnvDescription': grpc.unary_unary_rpc_method_handler(
          servicer.GetEnvDescription,
          request_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.GetEnvDescriptionRequest.FromString,
          response_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.GetEnvDescriptionResponse.SerializeToString,
      ),
      'SetCurrentTask': grpc.unary_unary_rpc_method_handler(
          servicer.SetCurrentTask,
          request_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.SetCurrentTaskRequest.FromString,
          response_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.SetCurrentTaskResponse.SerializeToString,
      ),
      'GetOptimizationParams': grpc.unary_unary_rpc_method_handler(
          servicer.GetOptimizationParams,
          request_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.GetOptimizationParamsRequest.FromString,
          response_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.GetOptimizationParamsResponse.SerializeToString,
      ),
      'Reset': grpc.unary_unary_rpc_method_handler(
          servicer.Reset,
          request_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.ResetRequest.FromString,
          response_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.ResetResponse.SerializeToString,
      ),
      'Step': grpc.unary_unary_rpc_method_handler(
          servicer.Step,
          request_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.StepRequest.FromString,
          response_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.StepResponse.SerializeToString,
      ),
      'Stop': grpc.unary_unary_rpc_method_handler(
          servicer.Stop,
          request_deserializer=energyplatform_dot_core_dot_env__service__functions__pb2.StopRequest.FromString,
          response_serializer=energyplatform_dot_core_dot_env__service__functions__pb2.StopResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'energyplatform.EnvService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
