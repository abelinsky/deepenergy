// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: energyplatform/core/optimization_param.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_energyplatform_2fcore_2foptimization_5fparam_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_energyplatform_2fcore_2foptimization_5fparam_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "energyplatform/core/types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_energyplatform_2fcore_2foptimization_5fparam_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_energyplatform_2fcore_2foptimization_5fparam_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_energyplatform_2fcore_2foptimization_5fparam_2eproto;
namespace energyplatform {
class OptimizationParameter;
class OptimizationParameterDefaultTypeInternal;
extern OptimizationParameterDefaultTypeInternal _OptimizationParameter_default_instance_;
class OptimizationParameterMetadata;
class OptimizationParameterMetadataDefaultTypeInternal;
extern OptimizationParameterMetadataDefaultTypeInternal _OptimizationParameterMetadata_default_instance_;
}  // namespace energyplatform
PROTOBUF_NAMESPACE_OPEN
template<> ::energyplatform::OptimizationParameter* Arena::CreateMaybeMessage<::energyplatform::OptimizationParameter>(Arena*);
template<> ::energyplatform::OptimizationParameterMetadata* Arena::CreateMaybeMessage<::energyplatform::OptimizationParameterMetadata>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace energyplatform {

// ===================================================================

class OptimizationParameterMetadata :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:energyplatform.OptimizationParameterMetadata) */ {
 public:
  OptimizationParameterMetadata();
  virtual ~OptimizationParameterMetadata();

  OptimizationParameterMetadata(const OptimizationParameterMetadata& from);
  OptimizationParameterMetadata(OptimizationParameterMetadata&& from) noexcept
    : OptimizationParameterMetadata() {
    *this = ::std::move(from);
  }

  inline OptimizationParameterMetadata& operator=(const OptimizationParameterMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizationParameterMetadata& operator=(OptimizationParameterMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizationParameterMetadata& default_instance();

  enum SpaceCase {
    kDiscreteSpace = 3,
    kContinuosSpace = 4,
    SPACE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OptimizationParameterMetadata* internal_default_instance() {
    return reinterpret_cast<const OptimizationParameterMetadata*>(
               &_OptimizationParameterMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OptimizationParameterMetadata& a, OptimizationParameterMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizationParameterMetadata* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizationParameterMetadata* New() const final {
    return CreateMaybeMessage<OptimizationParameterMetadata>(nullptr);
  }

  OptimizationParameterMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizationParameterMetadata>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OptimizationParameterMetadata& from);
  void MergeFrom(const OptimizationParameterMetadata& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizationParameterMetadata* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "energyplatform.OptimizationParameterMetadata";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_energyplatform_2fcore_2foptimization_5fparam_2eproto);
    return ::descriptor_table_energyplatform_2fcore_2foptimization_5fparam_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kPhysicalTypeFieldNumber = 2,
    kDiscreteSpaceFieldNumber = 3,
    kContinuosSpaceFieldNumber = 4,
  };
  // .energyplatform.ParameterType type = 1;
  void clear_type();
  ::energyplatform::ParameterType type() const;
  void set_type(::energyplatform::ParameterType value);

  // .energyplatform.PhysicalValueType physical_type = 2;
  void clear_physical_type();
  ::energyplatform::PhysicalValueType physical_type() const;
  void set_physical_type(::energyplatform::PhysicalValueType value);

  // .energyplatform.DiscreteInterval discrete_space = 3;
  bool has_discrete_space() const;
  void clear_discrete_space();
  const ::energyplatform::DiscreteInterval& discrete_space() const;
  ::energyplatform::DiscreteInterval* release_discrete_space();
  ::energyplatform::DiscreteInterval* mutable_discrete_space();
  void set_allocated_discrete_space(::energyplatform::DiscreteInterval* discrete_space);

  // .energyplatform.ContinuousInterval continuos_space = 4;
  bool has_continuos_space() const;
  void clear_continuos_space();
  const ::energyplatform::ContinuousInterval& continuos_space() const;
  ::energyplatform::ContinuousInterval* release_continuos_space();
  ::energyplatform::ContinuousInterval* mutable_continuos_space();
  void set_allocated_continuos_space(::energyplatform::ContinuousInterval* continuos_space);

  void clear_space();
  SpaceCase space_case() const;
  // @@protoc_insertion_point(class_scope:energyplatform.OptimizationParameterMetadata)
 private:
  class _Internal;
  void set_has_discrete_space();
  void set_has_continuos_space();

  inline bool has_space() const;
  inline void clear_has_space();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  int physical_type_;
  union SpaceUnion {
    SpaceUnion() {}
    ::energyplatform::DiscreteInterval* discrete_space_;
    ::energyplatform::ContinuousInterval* continuos_space_;
  } space_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_energyplatform_2fcore_2foptimization_5fparam_2eproto;
};
// -------------------------------------------------------------------

class OptimizationParameter :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:energyplatform.OptimizationParameter) */ {
 public:
  OptimizationParameter();
  virtual ~OptimizationParameter();

  OptimizationParameter(const OptimizationParameter& from);
  OptimizationParameter(OptimizationParameter&& from) noexcept
    : OptimizationParameter() {
    *this = ::std::move(from);
  }

  inline OptimizationParameter& operator=(const OptimizationParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimizationParameter& operator=(OptimizationParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptimizationParameter& default_instance();

  enum ValueCase {
    kFloatValue = 3,
    kIntValue = 4,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OptimizationParameter* internal_default_instance() {
    return reinterpret_cast<const OptimizationParameter*>(
               &_OptimizationParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(OptimizationParameter& a, OptimizationParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(OptimizationParameter* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptimizationParameter* New() const final {
    return CreateMaybeMessage<OptimizationParameter>(nullptr);
  }

  OptimizationParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptimizationParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OptimizationParameter& from);
  void MergeFrom(const OptimizationParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptimizationParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "energyplatform.OptimizationParameter";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_energyplatform_2fcore_2foptimization_5fparam_2eproto);
    return ::descriptor_table_energyplatform_2fcore_2foptimization_5fparam_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kInfoFieldNumber = 5,
    kMetadataFieldNumber = 1,
    kFloatValueFieldNumber = 3,
    kIntValueFieldNumber = 4,
  };
  // string id = 2;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);

  // string info = 5;
  void clear_info();
  const std::string& info() const;
  void set_info(const std::string& value);
  void set_info(std::string&& value);
  void set_info(const char* value);
  void set_info(const char* value, size_t size);
  std::string* mutable_info();
  std::string* release_info();
  void set_allocated_info(std::string* info);

  // .energyplatform.OptimizationParameterMetadata metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  const ::energyplatform::OptimizationParameterMetadata& metadata() const;
  ::energyplatform::OptimizationParameterMetadata* release_metadata();
  ::energyplatform::OptimizationParameterMetadata* mutable_metadata();
  void set_allocated_metadata(::energyplatform::OptimizationParameterMetadata* metadata);

  // float float_value = 3;
  private:
  bool has_float_value() const;
  public:
  void clear_float_value();
  float float_value() const;
  void set_float_value(float value);

  // int64 int_value = 4;
  private:
  bool has_int_value() const;
  public:
  void clear_int_value();
  ::PROTOBUF_NAMESPACE_ID::int64 int_value() const;
  void set_int_value(::PROTOBUF_NAMESPACE_ID::int64 value);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:energyplatform.OptimizationParameter)
 private:
  class _Internal;
  void set_has_float_value();
  void set_has_int_value();

  inline bool has_value() const;
  inline void clear_has_value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr info_;
  ::energyplatform::OptimizationParameterMetadata* metadata_;
  union ValueUnion {
    ValueUnion() {}
    float float_value_;
    ::PROTOBUF_NAMESPACE_ID::int64 int_value_;
  } value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_energyplatform_2fcore_2foptimization_5fparam_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OptimizationParameterMetadata

// .energyplatform.ParameterType type = 1;
inline void OptimizationParameterMetadata::clear_type() {
  type_ = 0;
}
inline ::energyplatform::ParameterType OptimizationParameterMetadata::type() const {
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameterMetadata.type)
  return static_cast< ::energyplatform::ParameterType >(type_);
}
inline void OptimizationParameterMetadata::set_type(::energyplatform::ParameterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:energyplatform.OptimizationParameterMetadata.type)
}

// .energyplatform.PhysicalValueType physical_type = 2;
inline void OptimizationParameterMetadata::clear_physical_type() {
  physical_type_ = 0;
}
inline ::energyplatform::PhysicalValueType OptimizationParameterMetadata::physical_type() const {
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameterMetadata.physical_type)
  return static_cast< ::energyplatform::PhysicalValueType >(physical_type_);
}
inline void OptimizationParameterMetadata::set_physical_type(::energyplatform::PhysicalValueType value) {
  
  physical_type_ = value;
  // @@protoc_insertion_point(field_set:energyplatform.OptimizationParameterMetadata.physical_type)
}

// .energyplatform.DiscreteInterval discrete_space = 3;
inline bool OptimizationParameterMetadata::has_discrete_space() const {
  return space_case() == kDiscreteSpace;
}
inline void OptimizationParameterMetadata::set_has_discrete_space() {
  _oneof_case_[0] = kDiscreteSpace;
}
inline ::energyplatform::DiscreteInterval* OptimizationParameterMetadata::release_discrete_space() {
  // @@protoc_insertion_point(field_release:energyplatform.OptimizationParameterMetadata.discrete_space)
  if (has_discrete_space()) {
    clear_has_space();
      ::energyplatform::DiscreteInterval* temp = space_.discrete_space_;
    space_.discrete_space_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::energyplatform::DiscreteInterval& OptimizationParameterMetadata::discrete_space() const {
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameterMetadata.discrete_space)
  return has_discrete_space()
      ? *space_.discrete_space_
      : *reinterpret_cast< ::energyplatform::DiscreteInterval*>(&::energyplatform::_DiscreteInterval_default_instance_);
}
inline ::energyplatform::DiscreteInterval* OptimizationParameterMetadata::mutable_discrete_space() {
  if (!has_discrete_space()) {
    clear_space();
    set_has_discrete_space();
    space_.discrete_space_ = CreateMaybeMessage< ::energyplatform::DiscreteInterval >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:energyplatform.OptimizationParameterMetadata.discrete_space)
  return space_.discrete_space_;
}

// .energyplatform.ContinuousInterval continuos_space = 4;
inline bool OptimizationParameterMetadata::has_continuos_space() const {
  return space_case() == kContinuosSpace;
}
inline void OptimizationParameterMetadata::set_has_continuos_space() {
  _oneof_case_[0] = kContinuosSpace;
}
inline ::energyplatform::ContinuousInterval* OptimizationParameterMetadata::release_continuos_space() {
  // @@protoc_insertion_point(field_release:energyplatform.OptimizationParameterMetadata.continuos_space)
  if (has_continuos_space()) {
    clear_has_space();
      ::energyplatform::ContinuousInterval* temp = space_.continuos_space_;
    space_.continuos_space_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::energyplatform::ContinuousInterval& OptimizationParameterMetadata::continuos_space() const {
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameterMetadata.continuos_space)
  return has_continuos_space()
      ? *space_.continuos_space_
      : *reinterpret_cast< ::energyplatform::ContinuousInterval*>(&::energyplatform::_ContinuousInterval_default_instance_);
}
inline ::energyplatform::ContinuousInterval* OptimizationParameterMetadata::mutable_continuos_space() {
  if (!has_continuos_space()) {
    clear_space();
    set_has_continuos_space();
    space_.continuos_space_ = CreateMaybeMessage< ::energyplatform::ContinuousInterval >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:energyplatform.OptimizationParameterMetadata.continuos_space)
  return space_.continuos_space_;
}

inline bool OptimizationParameterMetadata::has_space() const {
  return space_case() != SPACE_NOT_SET;
}
inline void OptimizationParameterMetadata::clear_has_space() {
  _oneof_case_[0] = SPACE_NOT_SET;
}
inline OptimizationParameterMetadata::SpaceCase OptimizationParameterMetadata::space_case() const {
  return OptimizationParameterMetadata::SpaceCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// OptimizationParameter

// .energyplatform.OptimizationParameterMetadata metadata = 1;
inline bool OptimizationParameter::has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline void OptimizationParameter::clear_metadata() {
  if (GetArenaNoVirtual() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
inline const ::energyplatform::OptimizationParameterMetadata& OptimizationParameter::metadata() const {
  const ::energyplatform::OptimizationParameterMetadata* p = metadata_;
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameter.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::energyplatform::OptimizationParameterMetadata*>(
      &::energyplatform::_OptimizationParameterMetadata_default_instance_);
}
inline ::energyplatform::OptimizationParameterMetadata* OptimizationParameter::release_metadata() {
  // @@protoc_insertion_point(field_release:energyplatform.OptimizationParameter.metadata)
  
  ::energyplatform::OptimizationParameterMetadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::energyplatform::OptimizationParameterMetadata* OptimizationParameter::mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::energyplatform::OptimizationParameterMetadata>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:energyplatform.OptimizationParameter.metadata)
  return metadata_;
}
inline void OptimizationParameter::set_allocated_metadata(::energyplatform::OptimizationParameterMetadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete metadata_;
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:energyplatform.OptimizationParameter.metadata)
}

// string id = 2;
inline void OptimizationParameter::clear_id() {
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OptimizationParameter::id() const {
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameter.id)
  return id_.GetNoArena();
}
inline void OptimizationParameter::set_id(const std::string& value) {
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:energyplatform.OptimizationParameter.id)
}
inline void OptimizationParameter::set_id(std::string&& value) {
  
  id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:energyplatform.OptimizationParameter.id)
}
inline void OptimizationParameter::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:energyplatform.OptimizationParameter.id)
}
inline void OptimizationParameter::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:energyplatform.OptimizationParameter.id)
}
inline std::string* OptimizationParameter::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:energyplatform.OptimizationParameter.id)
  return id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OptimizationParameter::release_id() {
  // @@protoc_insertion_point(field_release:energyplatform.OptimizationParameter.id)
  
  return id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OptimizationParameter::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:energyplatform.OptimizationParameter.id)
}

// float float_value = 3;
inline bool OptimizationParameter::has_float_value() const {
  return value_case() == kFloatValue;
}
inline void OptimizationParameter::set_has_float_value() {
  _oneof_case_[0] = kFloatValue;
}
inline void OptimizationParameter::clear_float_value() {
  if (has_float_value()) {
    value_.float_value_ = 0;
    clear_has_value();
  }
}
inline float OptimizationParameter::float_value() const {
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameter.float_value)
  if (has_float_value()) {
    return value_.float_value_;
  }
  return 0;
}
inline void OptimizationParameter::set_float_value(float value) {
  if (!has_float_value()) {
    clear_value();
    set_has_float_value();
  }
  value_.float_value_ = value;
  // @@protoc_insertion_point(field_set:energyplatform.OptimizationParameter.float_value)
}

// int64 int_value = 4;
inline bool OptimizationParameter::has_int_value() const {
  return value_case() == kIntValue;
}
inline void OptimizationParameter::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
inline void OptimizationParameter::clear_int_value() {
  if (has_int_value()) {
    value_.int_value_ = PROTOBUF_LONGLONG(0);
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 OptimizationParameter::int_value() const {
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameter.int_value)
  if (has_int_value()) {
    return value_.int_value_;
  }
  return PROTOBUF_LONGLONG(0);
}
inline void OptimizationParameter::set_int_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!has_int_value()) {
    clear_value();
    set_has_int_value();
  }
  value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:energyplatform.OptimizationParameter.int_value)
}

// string info = 5;
inline void OptimizationParameter::clear_info() {
  info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OptimizationParameter::info() const {
  // @@protoc_insertion_point(field_get:energyplatform.OptimizationParameter.info)
  return info_.GetNoArena();
}
inline void OptimizationParameter::set_info(const std::string& value) {
  
  info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:energyplatform.OptimizationParameter.info)
}
inline void OptimizationParameter::set_info(std::string&& value) {
  
  info_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:energyplatform.OptimizationParameter.info)
}
inline void OptimizationParameter::set_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:energyplatform.OptimizationParameter.info)
}
inline void OptimizationParameter::set_info(const char* value, size_t size) {
  
  info_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:energyplatform.OptimizationParameter.info)
}
inline std::string* OptimizationParameter::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:energyplatform.OptimizationParameter.info)
  return info_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OptimizationParameter::release_info() {
  // @@protoc_insertion_point(field_release:energyplatform.OptimizationParameter.info)
  
  return info_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OptimizationParameter::set_allocated_info(std::string* info) {
  if (info != nullptr) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:energyplatform.OptimizationParameter.info)
}

inline bool OptimizationParameter::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void OptimizationParameter::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline OptimizationParameter::ValueCase OptimizationParameter::value_case() const {
  return OptimizationParameter::ValueCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace energyplatform

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_energyplatform_2fcore_2foptimization_5fparam_2eproto
