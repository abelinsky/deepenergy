/* Copyright 2019 Alexander Belinsky. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

syntax = "proto3";

package energyplatform;
import "energyplatform/core/types.proto";

// Protocol buffer representing a node of the system's graph.
// Node is the  place where several physical technological objects ("edges") are interconnected.  
// In each node there is a shift and redistribution of product flows.
// Each node has state - the values of parameters, which describe physical system.
// The array of nodes and it's values determines the state (or observation) of system.
message Node {
    // Node's id.
    // Unique within a single system's graph.
    int32 uid = 1;  
    
    // Physical params that correspond with the node (pressure, temperature, etc.)
    repeated PhysicalParam param = 2;
}

// Protocol buffer representing an edge of the system's graph.
// Edge is the physical object (equipment) of the system under control.
message Edge {
    // Edge's id.
    // Unique within a single system's graph.
    int32 uid = 1;
    
    // Physical params that correspond with the edge (pressure, temperature, etc.)
    repeated PhysicalParam edge_params = 2;
}

// Protocol buffer representing system's graph.
message Graph {
    // Graph's nodes
    map<int32, Node> nodes = 1;

    // Graph's edges
    map<int32, Edge> edges = 2;
}